{"version":3,"sources":["polyfill.js","cloudapp/NavBarChangeUser.js","cloudapp/NavBar.js","cloudapp/ContentAdmin.js","cloudapp/ModalForAddService.js","cloudapp/ModalErrorSelectingServiceOrLicense.js","cloudapp/CurrentClientServices.js","cloudapp/ModalForAddLicense.js","cloudapp/CurrentClientLicenses.js","cloudapp/ModalTopUpBalance.js","cloudapp/ContentClient.js","cloudapp/AdminLogin.js","cloudapp/ClientLogin.js","cloudapp/ModalErrorLogin.js","cloudapp/Footer.js","cloudapp/MainPage.js","App.js","serviceWorker.js","assets/icons/sygnet.js","assets/icons/index.js","assets/icons/logo.js","assets/icons/logo-negative.js","store.js","index.js"],"names":["window","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","prototype","Event","Element","matches","msMatchesSelector","webkitMatchesSelector","closest","s","el","this","call","parentElement","parentNode","nodeType","NavBarChangeUser","props","sendUserRole","bind","item","onClick","Component","NavBar","state","isOpen","handleClick","logOut","setState","expandable","color","className","fixed","inNavbar","show","navbar","isOnline","inNav","role","map","index","fields","ContentAdmin","details","toggleDetails","position","indexOf","newDetails","slice","splice","xs","lg","style","margin","items","data","itemsPerPage","pagination","scopedSlots","variant","shape","size","includes","backgroundColor","display","marginRight","services","fontSize","name","licenses","top","left","fontWeight","arrWithMonthCost","reduce","sum","current","ModalForAddService","change","handleChange","addService","target","value","onClose","toggleModalWindow","centered","closeButton","onChange","listOfServices","price","ModalErrorSelectingServiceOrLicense","isModalOpen","toggleModalErrorWindow","CurrentClientServices","isModalErrorOpen","service","allClientServices","currentClientServices","forEach","push","firebase","firestore","collection","doc","nameOfClient","update","FieldValue","arrayUnion","balance","costPerMonth","ModalForAddLicense","addLicense","listOfLicenses","CurrentClientLicenses","license","allClientLicenses","currentClientLicenses","ModalTopUpBalance","htmlFor","id","placeholder","required","custom","ContentClient","sm","md","currentClient","AdminLogin","login","password","sendLoginAndPassword","type","autoComplete","ClientLogin","ModalErrorLogin","toggleModaErrorlWindow","Footer","href","rel","MainPage","clientData","roleData","arrWithAdminLogins","arrWithAdminPasswords","arrWithClientLogins","arrWithClientPasswords","saveUserRole","saveAdminLoginAndPassword","saveClientLoginAndPassword","saveInLocalStorage","db","get","then","catch","error","console","log","admins","where","onSnapshot","querySnapshot","clientLogins","clientPasswords","localStorage","getItem","setItem","clear","loginPage","contentPage","welcomePage","justifyContent","App","Boolean","location","hostname","match","icons","Object","assign","sygnet","logo","logoNegative","cilAlignCenter","cilAlignLeft","cilAlignRight","cilApplicationsSettings","cilArrowRight","cilArrowTop","cilAsterisk","cilBan","cilBasket","cilBell","cilBold","cilBookmark","cilCalculator","cilCalendar","cilCloudDownload","cilChartPie","cilCheck","cilChevronBottom","cilChevronLeft","cilChevronRight","cilChevronTop","cilCircle","cilCheckCircle","cilCode","cilCommentSquare","cilCreditCard","cilCursor","cilCursorMove","cilDrop","cilDollar","cilEnvelopeClosed","cilEnvelopeLetter","cilEnvelopeOpen","cilEuro","cilGlobeAlt","cilGrid","cilFile","cilFullscreen","cilFullscreenExit","cilGraph","cilHome","cilInbox","cilIndentDecrease","cilIndentIncrease","cilInputPower","cilItalic","cilJustifyCenter","cilJustifyLeft","cilLaptop","cilLayers","cilLightbulb","cilList","cilListNumbered","cilListRich","cilLocationPin","cilLockLocked","cilMagnifyingGlass","cilMap","cilMoon","cilNotes","cilOptions","cilPaperclip","cilPaperPlane","cilPencil","cilPeople","cilPhone","cilPrint","cilPuzzle","cilSave","cilScrubber","cilSettings","cilShare","cilShareAll","cilShareBoxed","cilShieldAlt","cilSpeech","cilSpeedometer","cilSpreadsheet","cilStar","cilSun","cilTags","cilTask","cilTrash","cilUnderline","cilUser","cilUserFemale","cilUserFollow","cilUserUnfollow","cilX","cilXCircle","cilWarning","cifUs","cifBr","cifIn","cifFr","cifEs","cifPl","cibSkype","cibFacebook","cibTwitter","cibLinkedin","cibFlickr","cibTumblr","cibXing","cibGithub","cibStackoverflow","cibYoutube","cibDribbble","cibInstagram","cibPinterest","cibVk","cibYahoo","cibBehance","cibReddit","cibVimeo","cibCcMastercard","cibCcVisa","cibStripe","cibPaypal","cibGooglePay","cibCcAmex","initialState","sidebarShow","store","createStore","rest","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","React","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8JA8BA,WAEE,GAAmC,oBAAvBA,OAAOC,YAA6B,OAAO,EAEvD,SAASA,EAAcC,EAAOC,GAC5BA,EAASA,GAAU,CAAEC,SAAS,EAAOC,YAAY,EAAOC,YAAQC,GAChE,IAAIC,EAAMC,SAASC,YAAa,eAEhC,OADAF,EAAIG,gBAAiBT,EAAOC,EAAOC,QAASD,EAAOE,WAAYF,EAAOG,QAC/DE,EAGTP,EAAYW,UAAYZ,OAAOa,MAAMD,UAErCZ,OAAOC,YAAcA,EAbvB,GAgBKa,QAAQF,UAAUG,UACrBD,QAAQF,UAAUG,QAChBD,QAAQF,UAAUI,mBAClBF,QAAQF,UAAUK,uBAGjBH,QAAQF,UAAUM,UACrBJ,QAAQF,UAAUM,QAAU,SAASC,GACnC,IAAIC,EAAKC,KAET,EAAG,CACD,GAAIP,QAAQF,UAAUG,QAAQO,KAAKF,EAAID,GAAI,OAAOC,EAClDA,EAAKA,EAAGG,eAAiBH,EAAGI,iBACd,OAAPJ,GAA+B,IAAhBA,EAAGK,UAC3B,OAAO,Q,qkECvCMC,E,kDAdX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,aAAe,EAAKA,aAAaC,KAAlB,gBAFL,E,2DAKjBR,KAAKM,MAAMC,aAAaP,KAAKM,MAAMG,Q,+BAGjC,OACE,cAAC,IAAD,CAAeC,QAASV,KAAKO,aAA7B,SAA4CP,KAAKM,MAAMG,W,GAVlCE,aCoFlBC,E,kDAzEX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,QAAQ,GAEZ,EAAKC,YAAc,EAAKA,YAAYP,KAAjB,gBACnB,EAAKD,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKQ,OAAS,EAAKA,OAAOR,KAAZ,gBAPC,E,0DAUfR,KAAKiB,SAAS,CACVH,QAASd,KAAKa,MAAMC,W,mCAGfL,GACTT,KAAKM,MAAMC,aAAaE,K,+BAGxBT,KAAKM,MAAMU,W,+BAEL,IAAD,OACL,OACI,8BACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,eAAC,IAAD,CACIE,WAAW,KACXC,MAAM,OACNC,UAAU,UACVC,MAAO,MAJX,UAMI,cAAC,IAAD,CACIC,UAAQ,EACRZ,QAASV,KAAKe,cAElB,cAAC,IAAD,CACIQ,KAAMvB,KAAKa,MAAMC,OACjBU,QAAM,EAFV,SAIA,cAAC,IAAD,CAAYJ,UAAU,UAAtB,SACMpB,KAAKM,MAAMmB,SACL,cAAC,IAAD,CACIN,MAAM,UACNC,UAAU,OACVV,QAASV,KAAKgB,OAHlB,4CAOA,eAAC,IAAD,CAAWU,OAAK,EAAhB,UACI,cAAC,IAAD,CAAiBN,UAAU,aAA3B,uFAGA,cAAC,IAAD,UACKpB,KAAKM,MAAMqB,KAAKC,KAAI,SAACnB,EAAMoB,GACxB,OAAO,cAAC,EAAD,CAEKpB,KAAMA,EACNF,aAAc,EAAKA,cAFdsB,4B,GAxDhDlB,aCHfmB,EAAS,CAAC,OAAO,iBAAkB,gBA2G1BC,E,kDAxGX,WAAYzB,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTmB,QAAS,IAEb,EAAKC,cAAgB,EAAKA,cAAczB,KAAnB,gBALN,E,0DAOLqB,GACV,IAAMK,EAAWlC,KAAKa,MAAMmB,QAAQG,QAAQN,GACxCO,EAAapC,KAAKa,MAAMmB,QAAQK,SAClB,IAAdH,EACFE,EAAWE,OAAOJ,EAAU,GAE5BE,EAAa,CAACP,GAEhB7B,KAAKiB,SAAS,CACVe,QAASI,M,+BAGP,IAAD,OACL,OACI,8BACI,cAAC,IAAD,UACI,cAAC,IAAD,CACIG,GAAG,KACHC,GAAG,IACHC,MAAO,CAACC,OAAQ,WAHpB,SAKI,eAAC,IAAD,CAAOtB,UAAU,oBAAjB,UACI,cAAC,IAAD,CAAaA,UAAU,YAAvB,mGAGA,cAAC,IAAD,UACI,cAAC,IAAD,CACIuB,MAAO3C,KAAKM,MAAMsC,KAClBd,OAAQA,EACRe,aAAc,EACdC,YAAU,EACVC,YAAa,CACT,aACI,SAACtC,EAAMoB,GACH,OACI,oBAAIT,UAAU,OAAd,SACI,cAAC,IAAD,CACID,MAAM,UACN6B,QAAQ,UACRC,MAAM,SACNC,KAAK,KACLxC,QAAS,WAAQ,EAAKuB,cAAcJ,IALxC,SAOK,EAAKhB,MAAMmB,QAAQmB,SAAStB,GAAS,OAAS,YAKnE,QACI,SAACpB,EAAMoB,GACP,OACA,cAAC,IAAD,CAAWN,KAAM,EAAKV,MAAMmB,QAAQmB,SAAStB,GAA7C,SACI,cAAC,IAAD,CAAWY,MAAO,CAACW,gBAAiB,6BAApC,SACI,sBAAKX,MAAO,CAACY,QAAS,QAAtB,UACI,sBAAKZ,MAAO,CAACa,YAAa,SAA1B,UACI,6EAGC7C,EAAK8C,SAAS3B,KAAI,SAACnB,EAAMoB,GACtB,OAAO,qBAAiBY,MAAO,CAACe,SAAU,QAAnC,SAA6C/C,EAAKgD,MAAxC5B,SAGzB,gCACI,mFAGCpB,EAAKiD,SAAS9B,KAAI,SAACnB,EAAMoB,GACtB,OAAO,qBAAiBY,MAAO,CAACe,SAAU,QAAnC,SAA6C/C,EAAKgD,MAAxC5B,sBAWrD,cAAC,IAAD,CAAWY,MAAO,CAACP,SAAU,WAAYyB,IAAK,IAAKC,KAAM,OAAQxC,UAAU,YAA3E,SACI,gCACI,qBAAKqB,MAAO,CAACoB,WAAY,UAAzB,mCAGA,8BACK7D,KAAKM,MAAMwD,iBAAiBC,QAAO,SAACC,EAAKC,GAAN,OAAkBD,EAAMC,IAAS,uB,GA5FlFtD,aCuDZuD,E,kDAxDX,WAAY5D,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTsD,OAAQ,IAEZ,EAAKC,aAAe,EAAKA,aAAa5D,KAAlB,gBACpB,EAAK6D,WAAa,EAAKA,WAAW7D,KAAhB,gBANH,E,yDASfR,KAAKM,MAAM+D,WAAWrE,KAAKa,MAAMsD,U,mCAExBtF,GACTmB,KAAKiB,SAAS,CACVkD,OAAQtF,EAAMyF,OAAOC,U,+BAIzB,OACI,8BACI,eAAC,IAAD,CACIhD,KAAMvB,KAAKM,MAAMQ,OACjB0D,QAASxE,KAAKM,MAAMmE,kBACpBC,UAAU,EAHd,UAKI,cAAC,IAAD,CAAcC,aAAW,EAACvD,UAAU,UAApC,SACI,cAAC,IAAD,oPAEJ,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAASwD,SAAU5E,KAAKoE,aAAxB,SACMpE,KAAKM,MAAMuE,eAAejD,KAAI,SAACnB,EAAMoB,GACnC,OAAO,yBAAoB0C,MAAO9D,EAAKgD,KAAhC,UAAuChD,EAAKgD,KAA5C,IAAmDhD,EAAKqE,QAA3CjD,YAKpC,eAAC,IAAD,WACI,cAAC,IAAD,CACIV,MAAM,UACNT,QAASV,KAAKqE,WAFlB,0BAMA,cAAC,IAAD,CACIlD,MAAM,YACNT,QAASV,KAAKM,MAAMmE,kBAFxB,8D,GA5CS9D,aC2BlBoE,E,uKA3BP,OACI,8BACI,eAAC,IAAD,CACIxD,KAAMvB,KAAKM,MAAM0E,YACjBR,QAASxE,KAAKM,MAAM2E,uBACpB/B,KAAK,KAHT,UAKA,cAAC,IAAD,CAAcyB,aAAW,EAACvD,UAAU,UAApC,SACI,cAAC,IAAD,gIAEJ,cAAC,IAAD,yJAGA,cAAC,IAAD,UACI,cAAC,IAAD,CACKD,MAAM,UACNT,QAASV,KAAKM,MAAM2E,uBAFzB,qC,GAhB8BtE,a,QCI5CmB,EAAS,CAAC,OAAO,SA4FRoD,E,kDAzFX,WAAY5E,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,QAAQ,EACRqE,kBAAkB,GAEtB,EAAKV,kBAAoB,EAAKA,kBAAkBjE,KAAvB,gBACzB,EAAKyE,uBAAyB,EAAKA,uBAAuBzE,KAA5B,gBAC9B,EAAK6D,WAAa,EAAKA,WAAW7D,KAAhB,gBARH,E,gEAWfR,KAAKiB,SAAS,CACVH,QAASd,KAAKa,MAAMC,W,+CAKxBd,KAAKiB,SAAS,CACV+D,aAAchF,KAAKa,MAAMmE,gB,iCAItBI,GAAU,IAAD,OACZC,EAAoB,GACxBrF,KAAKM,MAAMgF,sBAAsBC,SAAQ,SAAC9E,GACtC4E,EAAkBG,KAAK/E,EAAKgD,SAEhCzD,KAAKM,MAAMuE,eAAeU,SAAQ,SAAC9E,GAC3BA,EAAKgD,OAAS2B,IAAqD,IAA1CC,EAAkBlD,QAAQ1B,EAAKgD,OAA4B,0FAAZ2B,IAC7DK,IAASC,YACAC,WAAW,SAASC,IAAI,EAAKtF,MAAMuF,cAC9CC,OAAO,CACZvC,SAAUkC,IAASC,UAAUK,WAAWC,WAAW,CAACvC,KAAMhD,EAAKgD,KAAMqB,MAAOrE,EAAKqE,QACjFmB,QAAS,EAAK3F,MAAM2F,QAAUxF,EAAKqE,MACnC,iBAAkB,EAAKxE,MAAM4F,aAAezF,EAAKqE,QAErD,EAAKL,yBAG+B,IAAxCY,EAAkBlD,QAAQiD,IAC1BpF,KAAKiF,2B,+BAIT,OACI,sBAAK7D,UAAU,YAAf,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CACImB,GAAG,KACHC,GAAG,KACHC,MAAO,CAACC,OAAQ,WAHpB,SAKI,eAAC,IAAD,CAAOtB,UAAU,oBAAjB,UACI,eAAC,IAAD,CAAaA,UAAU,2CAAvB,kGAEI,cAAC,IAAD,CACI8B,KAAK,KACL/B,MAAM,OACNT,QAASV,KAAKyE,kBAHlB,sGAQJ,cAAC,IAAD,UACI,cAAC,IAAD,CACI9B,MAAO3C,KAAKM,MAAMgF,sBAClBxD,OAAQA,EACRe,aAAc,EACdC,YAAU,aAM9B,cAAC,EAAD,CACI2B,kBAAmBzE,KAAKyE,kBACxB3D,OAAQd,KAAKa,MAAMC,OACnB+D,eAAgB7E,KAAKM,MAAMuE,eAC3BR,WAAYrE,KAAKqE,aAErB,cAAC,EAAD,CACIY,uBAAwBjF,KAAKiF,uBAC7BD,YAAahF,KAAKa,MAAMmE,qB,GAnFRrE,aCqDrBwF,E,kDAxDX,WAAY7F,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTsD,OAAQ,IAEZ,EAAKC,aAAe,EAAKA,aAAa5D,KAAlB,gBACpB,EAAK4F,WAAa,EAAKA,WAAW5F,KAAhB,gBANH,E,yDASfR,KAAKM,MAAM8F,WAAWpG,KAAKa,MAAMsD,U,mCAExBtF,GACTmB,KAAKiB,SAAS,CACVkD,OAAQtF,EAAMyF,OAAOC,U,+BAIzB,OACI,8BACI,eAAC,IAAD,CACIhD,KAAMvB,KAAKM,MAAMQ,OACjB0D,QAASxE,KAAKM,MAAMmE,kBACpBC,UAAU,EAHd,UAKI,cAAC,IAAD,CAAcC,aAAW,EAACvD,UAAU,UAApC,SACI,cAAC,IAAD,gQAEJ,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAASwD,SAAU5E,KAAKoE,aAAxB,SACMpE,KAAKM,MAAM+F,eAAezE,KAAI,SAACnB,EAAMoB,GACnC,OAAO,yBAAoB0C,MAAO9D,EAAKgD,KAAhC,UAAuChD,EAAKgD,KAA5C,IAAmDhD,EAAKqE,QAA3CjD,YAKpC,eAAC,IAAD,WACI,cAAC,IAAD,CACIV,MAAM,UACNT,QAASV,KAAKoG,WAFlB,0BAMA,cAAC,IAAD,CACIjF,MAAM,YACNT,QAASV,KAAKM,MAAMmE,kBAFxB,8D,GA5CS9D,aCE3BmB,EAAS,CAAC,OAAO,SA2FRwE,E,kDAxFX,WAAYhG,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,QAAQ,GAEZ,EAAK2D,kBAAoB,EAAKA,kBAAkBjE,KAAvB,gBACzB,EAAKyE,uBAAyB,EAAKA,uBAAuBzE,KAA5B,gBAC9B,EAAK4F,WAAa,EAAKA,WAAW5F,KAAhB,gBAPH,E,gEAUfR,KAAKiB,SAAS,CACVH,QAASd,KAAKa,MAAMC,W,+CAKxBd,KAAKiB,SAAS,CACV+D,aAAchF,KAAKa,MAAMmE,gB,iCAItBuB,GAAU,IAAD,OACZC,EAAoB,GACxBxG,KAAKM,MAAMmG,sBAAsBlB,SAAQ,SAAC9E,GACtC+F,EAAkBhB,KAAK/E,EAAKgD,SAEhCzD,KAAKM,MAAM+F,eAAed,SAAQ,SAAC9E,GAC3BA,EAAKgD,OAAS8C,IAAqD,IAA1CC,EAAkBrE,QAAQ1B,EAAKgD,OAA4B,0FAAZ8C,IAC7Dd,IAASC,YACAC,WAAW,SAASC,IAAI,EAAKtF,MAAMuF,cAC9CC,OAAO,CACZpC,SAAU+B,IAASC,UAAUK,WAAWC,WAAW,CAACvC,KAAMhD,EAAKgD,KAAMqB,MAAOrE,EAAKqE,QACjFmB,QAAS,EAAK3F,MAAM2F,QAAUxF,EAAKqE,MACnC,iBAAkB,EAAKxE,MAAM4F,aAAezF,EAAKqE,QAErD,EAAKL,yBAG+B,IAAxC+B,EAAkBrE,QAAQoE,IAC1BvG,KAAKiF,2B,+BAIT,OACI,sBAAK7D,UAAU,YAAf,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CACImB,GAAG,KACHC,GAAG,KACHC,MAAO,CAACC,OAAQ,WAHpB,SAKI,eAAC,IAAD,CAAOtB,UAAU,oBAAjB,UACI,eAAC,IAAD,CAAaA,UAAU,2CAAvB,kGAEI,cAAC,IAAD,CACI8B,KAAK,KACL/B,MAAM,OACNT,QAASV,KAAKyE,kBAHlB,kHAQJ,cAAC,IAAD,UACI,cAAC,IAAD,CACI9B,MAAO3C,KAAKM,MAAMmG,sBAClB3E,OAAQA,EACRe,aAAc,EACdC,YAAU,aAM9B,cAAC,EAAD,CACI2B,kBAAmBzE,KAAKyE,kBACxB3D,OAAQd,KAAKa,MAAMC,OACnBuF,eAAgBrG,KAAKM,MAAM+F,eAC3BD,WAAYpG,KAAKoG,aAErB,cAAC,EAAD,CACInB,uBAAwBjF,KAAKiF,uBAC7BD,YAAahF,KAAKa,MAAMmE,qB,GAlFRrE,aCqGrB+F,E,uKAjGP,OACI,8BACI,eAAC,IAAD,CACInF,KAAMvB,KAAKM,MAAM0E,YACjBR,QAASxE,KAAKM,MAAMmE,kBACpBvB,KAAK,KAHT,UAKA,cAAC,IAAD,CAAcyB,aAAW,EAACvD,UAAU,UAApC,SACI,cAAC,IAAD,wHAEJ,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAaA,UAAU,UAAvB,kPAGA,eAAC,IAAD,WACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAMmB,GAAG,KAAT,SACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAQoE,QAAQ,OAAhB,sHACA,cAAC,IAAD,CAAQC,GAAG,OAAOC,YAAY,kBAAkBC,UAAQ,WAIhE,cAAC,IAAD,UACI,cAAC,IAAD,CAAMvE,GAAG,KAAT,SACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAQoE,QAAQ,WAAhB,2EACA,cAAC,IAAD,CAAQC,GAAG,WAAWC,YAAY,sBAAsBC,UAAQ,WAIxE,eAAC,IAAD,WACI,cAAC,IAAD,CAAMvE,GAAG,IAAT,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAQoE,QAAQ,UAAhB,4CACA,eAAC,IAAD,CAASI,QAAM,EAACtD,KAAK,UAAUmD,GAAG,UAAlC,UACA,wBAAQrC,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,wBAIR,cAAC,IAAD,CAAMhC,GAAG,IAAT,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAQoE,QAAQ,SAAhB,gCACA,eAAC,IAAD,CAASI,QAAM,EAACtD,KAAK,SAASmD,GAAG,SAAjC,UACA,0CACA,0CACA,0CACA,0CACA,0CACA,0CACA,0CACA,0CACA,0CACA,kDAIR,cAAC,IAAD,CAAMrE,GAAG,IAAT,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAQoE,QAAQ,MAAhB,qBACA,cAAC,IAAD,CAAQC,GAAG,MAAMC,YAAY,MAAMC,UAAQ,YAIvD,cAAC,IAAD,UACI,cAAC,IAAD,CAAMvE,GAAG,KAAT,SACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAQoE,QAAQ,OAAhB,wIACA,cAAC,IAAD,CAAQC,GAAG,SAASC,YAAY,mBAAmBC,UAAQ,mBAO/E,eAAC,IAAD,WACI,cAAC,IAAD,CAAS3F,MAAM,UAAf,oEACA,cAAC,IAAD,CAASA,MAAM,YAAYT,QAASV,KAAKM,MAAMmE,kBAA/C,gC,GA3FY9D,aC8DjBqG,E,kDApEX,WAAY1G,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTmE,aAAa,GAEjB,EAAKP,kBAAoB,EAAKA,kBAAkBjE,KAAvB,gBALV,E,gEAQfR,KAAKiB,SAAS,CACV+D,aAAchF,KAAKa,MAAMmE,gB,+BAI7B,OACI,gCACI,sBAAK5D,UAAU,2CAAf,UACI,cAAC,IAAD,CACImB,GAAG,KACH0E,GAAG,IACHC,GAAG,IAHP,SAKI,cAAC,IAAD,CAAO9F,UAAU,UAAjB,SACI,eAAC,IAAD,CAAWA,UAAU,cAArB,yIAC6BpB,KAAKM,MAAM6G,cAAc1D,YAI9D,cAAC,IAAD,CAAMlB,GAAG,KAAK0E,GAAG,IAAIC,GAAG,IAAxB,SACI,cAAC,IAAD,CAAO9F,UAAU,UAAjB,SACI,eAAC,IAAD,CAAWA,UAAU,iCAArB,8FACqBpB,KAAKM,MAAM6G,cAAclB,QAC1C,cAAC,IAAD,CACI9E,MAAM,UACNC,UAAU,OACVV,QAASV,KAAKyE,kBAHlB,mHAYhB,sBAAKrD,UAAU,mBAAf,UACI,cAAC,EAAD,CACIkE,sBAAuBtF,KAAKM,MAAM6G,cAAc5D,SAChDsB,eAAgB7E,KAAKM,MAAMuE,eAC3BgB,aAAc7F,KAAKM,MAAMuF,aACzBI,QAASjG,KAAKM,MAAM6G,cAAclB,QAClCC,aAAclG,KAAKM,MAAM6G,cAAc,oBAE3C,cAAC,EAAD,CACIV,sBAAuBzG,KAAKM,MAAM6G,cAAczD,SAChD2C,eAAgBrG,KAAKM,MAAM+F,eAC3BR,aAAc7F,KAAKM,MAAMuF,aACzBI,QAASjG,KAAKM,MAAM6G,cAAclB,QAClCC,aAAclG,KAAKM,MAAM6G,cAAc,uBAG/C,cAAC,EAAD,CACI1C,kBAAmBzE,KAAKyE,kBACxBO,YAAahF,KAAKa,MAAMmE,qB,GA9DhBrE,a,gBCuFbyG,E,kDAhFX,WAAY9G,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTwG,MAAO,GACPC,SAAU,IAEd,EAAKlD,aAAe,EAAKA,aAAa5D,KAAlB,gBACpB,EAAK+G,qBAAuB,EAAKA,qBAAqB/G,KAA1B,gBAPb,E,4DASkB,IAAD,IAAtB8D,OAASC,EAAa,EAAbA,MAAOqC,EAAM,EAANA,GAC1B5G,KAAKiB,SAAL,eACK2F,EAAKrC,M,6CAIVvE,KAAKM,MAAMiH,qBAAqBvH,KAAKa,MAAMwG,MAAOrH,KAAKa,MAAMyG,Y,+BAG7D,OACI,qBAAKlG,UAAU,sDAAf,SACI,cAAC,IAAD,CAAYqB,MAAO,CAACC,OAAQ,WAA5B,SACI,cAAC,IAAD,CAAMtB,UAAU,yBAAhB,SACI,cAAC,IAAD,CAAM8F,GAAG,IAAT,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAO9F,UAAU,MAAjB,SACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,6HACA,mBAAGA,UAAU,aAAb,kNACA,eAAC,IAAD,CAAaA,UAAU,OAAvB,UACI,cAAC,IAAD,UACI,cAAC,IAAD,UACA,cAAC,IAAD,CAAOqC,KAAK,iBAGhB,cAAC,IAAD,CACI+D,KAAK,OACLX,YAAY,QACZY,aAAa,QACbb,GAAG,QACHhC,SAAU5E,KAAKoE,kBAGvB,eAAC,IAAD,CAAahD,UAAU,OAAvB,UACI,cAAC,IAAD,UACI,cAAC,IAAD,UACA,cAAC,IAAD,CAAOqC,KAAK,wBAGhB,cAAC,IAAD,CACI+D,KAAK,WACLX,YAAY,WACZY,aAAa,mBACbb,GAAG,WACHhC,SAAU5E,KAAKoE,kBAGvB,cAAC,IAAD,UACI,cAAC,IAAD,CAAM7B,GAAG,IAAT,SACI,cAAC,IAAD,CACApB,MAAM,UACNC,UAAU,OACVV,QAASV,KAAKuH,qBAHd,qE,GA5D3B5G,aCiFV+G,E,kDAhFX,WAAYpH,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTwG,MAAO,GACPC,SAAU,IAEd,EAAKlD,aAAe,EAAKA,aAAa5D,KAAlB,gBACpB,EAAK+G,qBAAuB,EAAKA,qBAAqB/G,KAA1B,gBAPb,E,4DASkB,IAAD,IAAtB8D,OAASC,EAAa,EAAbA,MAAOqC,EAAM,EAANA,GAC1B5G,KAAKiB,SAAL,eACK2F,EAAKrC,M,6CAIVvE,KAAKM,MAAMiH,qBAAqBvH,KAAKa,MAAMwG,MAAOrH,KAAKa,MAAMyG,Y,+BAG7D,OACI,qBAAKlG,UAAU,sDAAf,SACA,cAAC,IAAD,CAAYqB,MAAO,CAACC,OAAQ,WAA5B,SACI,cAAC,IAAD,CAAMtB,UAAU,yBAAhB,SACI,cAAC,IAAD,CAAM8F,GAAG,IAAT,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAO9F,UAAU,MAAjB,SACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,6HACA,mBAAGA,UAAU,aAAb,wKACA,eAAC,IAAD,CAAaA,UAAU,OAAvB,UACI,cAAC,IAAD,UACI,cAAC,IAAD,UACA,cAAC,IAAD,CAAOqC,KAAK,iBAGhB,cAAC,IAAD,CACI+D,KAAK,OACJX,YAAY,QACZY,aAAa,QACbb,GAAG,QACHhC,SAAU5E,KAAKoE,kBAGxB,eAAC,IAAD,CAAahD,UAAU,OAAvB,UACI,cAAC,IAAD,UACI,cAAC,IAAD,UACA,cAAC,IAAD,CAAOqC,KAAK,wBAGhB,cAAC,IAAD,CACI+D,KAAK,WACLX,YAAY,WACZY,aAAa,mBACbb,GAAG,WACHhC,SAAU5E,KAAKoE,kBAGvB,cAAC,IAAD,UACI,cAAC,IAAD,CAAM7B,GAAG,IAAT,SACI,cAAC,IAAD,CACApB,MAAM,UACNC,UAAU,OACVV,QAASV,KAAKuH,qBAHd,qE,GA5DtB5G,aCsBXgH,E,uKA3BP,OACI,8BACI,eAAC,IAAD,CACIpG,KAAMvB,KAAKM,MAAM0E,YACjBR,QAASxE,KAAKM,MAAMsH,uBACpB1E,KAAK,KAHT,UAKA,cAAC,IAAD,CAAcyB,aAAW,EAACvD,UAAU,UAApC,SACI,cAAC,IAAD,yHAEJ,cAAC,IAAD,ocAGA,cAAC,IAAD,UACI,cAAC,IAAD,CACID,MAAM,UACNT,QAASV,KAAKM,MAAMsH,uBAFxB,qC,GAhBUjH,aCiBfkH,E,uKAtBP,OACI,8BACI,cAAC,IAAD,CACIxG,OAAO,EACPD,UAAU,qBAFd,SAII,sBAAKA,UAAU,WAAf,UACI,sBAAMA,UAAU,OAAhB,wBACA,mBACI0G,KAAK,0BACLxD,OAAO,SACPyD,IAAI,sBAHR,yC,GAVHpH,aCmONqH,E,kDAtNX,WAAY1H,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACToH,WAAY,GACZC,SAAU,GACVrD,eAAgB,GAChBwB,eAAgB,GAChB8B,mBAAoB,GACpBC,sBAAuB,GACvBC,oBAAqB,GACrBC,uBAAwB,GACxBxE,iBAAkB,GAClBnC,KAAM,GACN0F,MAAO,GACPC,SAAU,GACV7F,UAAU,EACVuD,aAAa,GAEjB,EAAKuD,aAAe,EAAKA,aAAa/H,KAAlB,gBACpB,EAAKgI,0BAA4B,EAAKA,0BAA0BhI,KAA/B,gBACjC,EAAKiI,2BAA6B,EAAKA,2BAA2BjI,KAAhC,gBAClC,EAAKkI,mBAAqB,EAAKA,mBAAmBlI,KAAxB,gBAC1B,EAAKQ,OAAS,EAAKA,OAAOR,KAAZ,gBACd,EAAKoH,uBAAyB,EAAKA,uBAAuBpH,KAA5B,gBAvBf,E,gEAyBE,IAAD,OAEVmI,EAAKlD,IAASC,YACJiD,EAAGhD,WAAW,SAASC,IAAI,QACnCgD,MAAMC,MAAK,SAACjD,GAChB,EAAK3E,SAAS,CACViH,SAAUtC,EAAIhD,OAAOjB,UAE1BmH,OAAM,SAASC,GACdC,QAAQC,IAAIF,MAEEJ,EAAGhD,WAAW,SAASC,IAAI,UACnCgD,MAAMC,MAAK,SAACjD,GAClB,EAAK3E,SAAS,CACVkH,mBAAoBvC,EAAIhD,OAAOsG,OAAOtH,KAAI,SAACnB,GAAD,OAAUA,EAAK4G,SACzDe,sBAAuBxC,EAAIhD,OAAOsG,OAAOtH,KAAI,SAACnB,GAAD,OAAUA,EAAK6G,iBAEjEwB,OAAM,SAASC,GACdC,QAAQC,IAAIF,MAEGJ,EAAGhD,WAAW,SAASwD,MAAM,WAAY,MAAM,GACvDC,YAAW,SAACC,GACnB,IAAIpB,EAAa,GACbqB,EAAe,GACfC,EAAkB,GAClBrD,EAAe,GACnBmD,EAAc9D,SAAQ,SAACK,GACnBqC,EAAWzC,KAAKI,EAAIhD,QACpB0G,EAAa9D,KAAKI,EAAIhD,OAAOyE,OAC7BkC,EAAgB/D,KAAKI,EAAIhD,OAAO0E,UAChCpB,EAAaV,KAAKI,EAAIhD,OAAO,sBAEjC,EAAK3B,SAAS,CACVgH,aACAI,oBAAqBiB,EACrBhB,uBAAwBiB,EACxBzF,iBAAkBoC,OAGNyC,EAAGhD,WAAW,SAASC,IAAI,YACnCgD,MAAMC,MAAK,SAACjD,GACpB,EAAK3E,SAAS,CACV4D,eAAgBe,EAAIhD,OAAOW,cAEhCuF,OAAM,SAASC,GACdC,QAAQC,IAAIF,MAEIJ,EAAGhD,WAAW,SAASC,IAAI,YACnCgD,MAAMC,MAAK,SAACjD,GACpB,EAAK3E,SAAS,CACVoF,eAAgBT,EAAIhD,OAAOc,cAEhCoF,OAAM,SAASC,GACdC,QAAQC,IAAIF,MAGhB,IAAM1B,EAAQmC,aAAaC,QAAQ,SAC7BnC,EAAWkC,aAAaC,QAAQ,YAChChI,EAAgD,SAArC+H,aAAaC,QAAQ,YACtCzJ,KAAKiB,SAAS,CACVoG,QACAC,WACA7F,e,mCAGKhB,GACTT,KAAKiB,SAAS,CACVU,KAAMlB,M,gDAIY4G,EAAOC,GAAW,IAAD,QACe,IAAlDtH,KAAKa,MAAMsH,mBAAmBhG,QAAQkF,KAAyE,IAAxDrH,KAAKa,MAAMuH,sBAAsBjG,QAAQmF,IAChGtH,KAAKiB,SAAS,CACVoG,QACAC,WACA7F,UAAU,EACVE,KAAM,KACP,kBAAM,EAAK+G,wBACdc,aAAaE,QAAQ,QAASrC,GAC9BmC,aAAaE,QAAQ,WAAYpC,IAEjCtH,KAAK4H,2B,iDAGcP,EAAOC,GAAW,IAAD,QACe,IAAnDtH,KAAKa,MAAMwH,oBAAoBlG,QAAQkF,KAA0E,IAAzDrH,KAAKa,MAAMyH,uBAAuBnG,QAAQmF,IAClGtH,KAAKiB,SAAS,CACVoG,QACAC,WACA7F,UAAU,EACVE,KAAM,KACP,kBAAM,EAAK+G,wBACdc,aAAaE,QAAQ,QAASrC,GAC9BmC,aAAaE,QAAQ,WAAYpC,GACjCkC,aAAaE,QAAQ,WAAY1J,KAAKa,MAAMY,WAE5CzB,KAAK4H,2B,2CAIT4B,aAAaE,QAAQ,WAAY1J,KAAKa,MAAMY,Y,+CAI5CzB,KAAKiB,SAAS,CACV+D,aAAchF,KAAKa,MAAMmE,gB,+BAI7BhF,KAAKiB,SAAS,CACVoG,MAAO,GACPC,SAAU,GACV7F,UAAU,EACVE,KAAM,KAEV6H,aAAaG,U,+BAEP,IAEFC,EAMAC,EAuBAC,EA/BC,OAkDL,MA/CyB,UAApB9J,KAAKa,MAAMc,KACZiI,EAAY,cAAC,EAAD,CAAYrC,qBAAsBvH,KAAKwI,4BACxB,WAApBxI,KAAKa,MAAMc,OAClBiI,EAAY,cAAC,EAAD,CAAarC,qBAAsBvH,KAAKyI,+BAGU,IAA7DzI,KAAKa,MAAMsH,mBAAmBhG,QAAQnC,KAAKa,MAAMwG,SAAoF,IAAnErH,KAAKa,MAAMuH,sBAAsBjG,QAAQnC,KAAKa,MAAMyG,UACvHuC,EAAgB,8BACI,cAAC,EAAD,CACIjH,KAAM5C,KAAKa,MAAMoH,WACjBnE,iBAAkB9D,KAAKa,MAAMiD,sBAGiB,IAA9D9D,KAAKa,MAAMwH,oBAAoBlG,QAAQnC,KAAKa,MAAMwG,SAAqF,IAApErH,KAAKa,MAAMyH,uBAAuBnG,QAAQnC,KAAKa,MAAMyG,YAChIuC,EAAgB,8BACM7J,KAAKa,MAAMoH,WAAWrG,KAAI,SAACnB,EAAMoB,GAC/B,GAAI,EAAKhB,MAAMwG,QAAU5G,EAAK4G,MAC1B,OAAO,cAAC,EAAD,CAEKF,cAAe1G,EACfoE,eAAgB,EAAKhE,MAAMgE,eAC3BwB,eAAgB,EAAKxF,MAAMwF,eAC3BR,aAAc,EAAKhF,MAAMwG,OAJpBxF,SAW3C7B,KAAKa,MAAMY,UAAgC,KAApBzB,KAAKa,MAAMc,OACpCmI,EAAgB,qBAAKrH,MAAO,CAACY,QAAS,OAAQ0G,eAAgB,UAA9C,SACI,cAAC,IAAD,CACIxH,GAAG,KACH0E,GAAG,KACHC,GAAG,IACHzE,MAAO,CAACe,SAAU,OAAQd,OAAQ,WAJtC,SAMI,cAAC,IAAD,CAAOtB,UAAU,UAAjB,SACI,cAAC,IAAD,whCAU5B,gCACI,cAAC,EAAD,CACIb,aAAcP,KAAKuI,aACnB5G,KAAM3B,KAAKa,MAAMqH,SACjBzG,SAAUzB,KAAKa,MAAMY,SACrBT,OAAQhB,KAAKgB,SAEf4I,EACAC,EACAC,EACF,cAAC,EAAD,CACIlC,uBAAwB5H,KAAK4H,uBAC7B5C,YAAahF,KAAKa,MAAMmE,cAE5B,cAAC,EAAD,W,GAjNOrE,aCHRqJ,E,uKANX,OACE,cAAC,EAAD,Q,GAHYrJ,aCKEsJ,QACW,cAA7BtL,OAAOuL,SAASC,UAEe,UAA7BxL,OAAOuL,SAASC,UAEhBxL,OAAOuL,SAASC,SAASC,MACvB,2DChBC,I,wqCCoIMC,GAAQC,OAAOC,OAAO,GAAI,CACrCC,ODrIoB,CAAC,UAAD,w7BCsIpBC,KCtIkB,CAAC,UAAD,owNDuIlBC,aEvI0B,CAAC,UAAD,2wNFwIzB,CACDC,oBACAC,kBACAC,mBACAC,6BACAC,mBACAC,iBACAC,iBACAC,YACAC,eACAC,aACAC,aACAC,iBACAC,mBACAC,iBACAC,sBACAC,iBACAC,cACAC,sBACAC,oBACAC,qBACAC,mBACAC,eACAC,oBACAC,aACAC,sBACAC,mBACAC,eACAC,mBACAC,aACAC,eACAC,uBACAC,uBACAC,qBACAC,aACAC,iBACAC,aACAC,aACAC,mBACAC,uBACAC,cACAC,aACAC,cACAC,uBACAC,uBACAC,mBACAC,eACAC,sBACAC,oBACAC,eACAC,eACAC,kBACAC,aACAC,qBACAC,iBACAC,oBACAC,mBACAC,wBACAC,YACAC,aACAC,cACAC,gBACAC,kBACAC,mBACAC,eACAC,eACAC,cACAC,cACAC,eACAC,aACAC,iBACAC,iBACAC,cACAC,iBACAC,mBACAC,kBACAC,eACAC,oBACAC,oBACAC,aACAC,YACAC,aACAC,aACAC,cACAC,kBACAC,aACAC,mBACAC,mBACAC,qBACAC,UACAC,gBACAC,iBACC,CACDC,WACAC,WACAC,WACAC,WACAC,WACAC,YACC,CACDC,aACAC,gBACAC,eACAC,gBACAC,cACAC,cACAC,YACAC,cACAC,qBACAC,eACAC,gBACAC,iBACAC,iBACAC,UACAC,aACAC,eACAC,cACAC,aACAC,qBACAC,eACAC,eACAC,eACAC,kBACAC,iB,wCGjQIC,GAAe,CACnBC,YAAa,cAaAC,GADDC,cATM,WAA8C,IAA7C1R,EAA4C,uDAApCuR,GAAoC,yCAApB5K,EAAoB,EAApBA,KAASgL,EAAW,yBAC/D,OAAQhL,GACN,IAAK,MACH,OAAO,6BAAI3G,GAAU2R,GACvB,QACE,OAAO3R,MCcb4E,IAASgN,cAVc,CACrBC,OAAQ,0CACRC,WAAY,sCACZC,YAAa,0DACbC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,8CAKTC,IAAM5I,MAAQA,GAEd6I,IAASC,OACP,cAAC,KAAD,CAAUb,MAAOA,GAAjB,SACE,cAAC,EAAD,MAEFlT,SAASgU,eAAe,SNwFpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1K,MAAK,SAAA2K,GACjCA,EAAaC,kB","file":"static/js/main.d275c748.chunk.js","sourcesContent":["/*\n* required polyfills\n*/\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import \"core-js\";\n// import 'core-js/features/symbol'\n// import 'core-js/features/object'\n// import 'core-js/features/function'\n// import 'core-js/features/parse-int'\n// import 'core-js/features/parse-float'\n// import 'core-js/features/number'\n// import 'core-js/features/math'\n// import 'core-js/features/string'\n// import 'core-js/features/date'\n// import 'core-js/features/array'\n// import 'core-js/features/regexp'\n// import 'core-js/features/map'\n// import 'core-js/features/weak-map'\n// import 'core-js/features/set'\n// import 'core-js/features/set/map';\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/features/reflect';\n\n/** Evergreen browsers require these. **/\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\n// import 'core-js/features/reflect'\n\n// CustomEvent() constructor functionality in IE9, IE10, IE11\n(function () {\n\n  if ( typeof window.CustomEvent === \"function\" ) return false\n\n  function CustomEvent ( event, params ) {\n    params = params || { bubbles: false, cancelable: false, detail: undefined }\n    var evt = document.createEvent( 'CustomEvent' )\n    evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail )\n    return evt\n  }\n\n  CustomEvent.prototype = window.Event.prototype\n\n  window.CustomEvent = CustomEvent\n})()\n\nif (!Element.prototype.matches) {\n  Element.prototype.matches =\n    Element.prototype.msMatchesSelector ||\n    Element.prototype.webkitMatchesSelector;\n}\n\nif (!Element.prototype.closest) {\n  Element.prototype.closest = function(s) {\n    var el = this;\n\n    do {\n      if (Element.prototype.matches.call(el, s)) return el;\n      el = el.parentElement || el.parentNode;\n    } while (el !== null && el.nodeType === 1);\n    return null;\n  };\n}\n","import React, {Component} from 'react';\r\n\r\nimport {\r\n    CDropdownItem,\r\n  } from '@coreui/react';\r\n\r\n  class NavBarChangeUser extends Component {\r\n      constructor(props) {\r\n          super(props);\r\n          this.sendUserRole = this.sendUserRole.bind(this);\r\n      };\r\n      sendUserRole() {\r\n        this.props.sendUserRole(this.props.item)\r\n      };\r\n      render() {\r\n          return (\r\n            <CDropdownItem onClick={this.sendUserRole}>{this.props.item}</CDropdownItem>\r\n          )\r\n      }\r\n  }\r\n\r\n  export default NavBarChangeUser","import React, {Component} from 'react';\r\n\r\nimport {\r\n    CCard,\r\n    CCardBody,\r\n    CCollapse,\r\n    CDropdownMenu,\r\n    CDropdownToggle,\r\n    CNavbar,\r\n    CNavbarNav,\r\n    CToggler,\r\n    CDropdown,\r\n    CButton\r\n  } from '@coreui/react';\r\nimport NavBarChangeUser from '../cloudapp/NavBarChangeUser';\r\n\r\nclass NavBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false,\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.sendUserRole = this.sendUserRole.bind(this);\r\n        this.logOut = this.logOut.bind(this);\r\n    };\r\n    handleClick() {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        })\r\n    };\r\n    sendUserRole(item) {\r\n        this.props.sendUserRole(item)\r\n    };\r\n    logOut() {\r\n        this.props.logOut()\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n                <CCard>\r\n                    <CCardBody>\r\n                        <CNavbar \r\n                            expandable=\"sm\" \r\n                            color=\"info\" \r\n                            className=\"bg-dark\" \r\n                            fixed={'top'}\r\n                        >\r\n                            <CToggler \r\n                                inNavbar \r\n                                onClick={this.handleClick}\r\n                            />\r\n                            <CCollapse \r\n                                show={this.state.isOpen} \r\n                                navbar\r\n                            >\r\n                            <CNavbarNav className=\"ml-auto\">\r\n                                { this.props.isOnline \r\n                                    ?   <CButton \r\n                                            color=\"primary\" \r\n                                            className=\"px-4\" \r\n                                            onClick={this.logOut}\r\n                                        >\r\n                                            Выйти\r\n                                        </CButton> \r\n                                    :   <CDropdown inNav>\r\n                                            <CDropdownToggle className=\"text-white\">\r\n                                                Выберите роль\r\n                                            </CDropdownToggle>\r\n                                            <CDropdownMenu>\r\n                                                {this.props.role.map((item, index) => {\r\n                                                    return <NavBarChangeUser \r\n                                                                key={index} \r\n                                                                item={item} \r\n                                                                sendUserRole={this.sendUserRole}\r\n                                                            />\r\n                                                })}\r\n                                            </CDropdownMenu>\r\n                                        </CDropdown>\r\n                                }\r\n                            </CNavbarNav>\r\n                            </CCollapse>\r\n                        </CNavbar>\r\n                    </CCardBody>\r\n                </CCard>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar","import React, {Component} from 'react';\r\n\r\nimport {\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CDataTable,\r\n    CButton,\r\n    CCollapse,\r\n    CRow\r\n  } from '@coreui/react';\r\n\r\nconst fields = ['name','cost-per-month', 'show_details'];\r\n\r\nclass ContentAdmin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            details: [],\r\n        }\r\n        this.toggleDetails = this.toggleDetails.bind(this);\r\n    };\r\n    toggleDetails(index) {\r\n        const position = this.state.details.indexOf(index);\r\n        let newDetails = this.state.details.slice();\r\n        if (position !== -1) {\r\n          newDetails.splice(position, 1);\r\n        } else {\r\n          newDetails = [index];\r\n        }\r\n        this.setState({\r\n            details: newDetails\r\n        })\r\n    };\r\n    render() {\r\n        return(\r\n            <div>\r\n                <CRow>\r\n                    <CCol \r\n                        xs=\"12\" \r\n                        lg=\"6\" \r\n                        style={{margin: '8% auto'}}\r\n                    >\r\n                        <CCard className=\"bg-gradient-light\">\r\n                            <CCardHeader className=\"text-body\">\r\n                                Список клиентов\r\n                            </CCardHeader>\r\n                            <CCardBody>\r\n                                <CDataTable\r\n                                    items={this.props.data}\r\n                                    fields={fields}\r\n                                    itemsPerPage={5}\r\n                                    pagination\r\n                                    scopedSlots={{\r\n                                        'show_details':\r\n                                            (item, index) => {\r\n                                                return (\r\n                                                    <td className=\"py-2\">\r\n                                                        <CButton\r\n                                                            color=\"primary\"\r\n                                                            variant=\"outline\"\r\n                                                            shape=\"square\"\r\n                                                            size=\"sm\"\r\n                                                            onClick={() => { this.toggleDetails(index) }}\r\n                                                        >\r\n                                                            {this.state.details.includes(index) ? 'Hide' : 'Show'}\r\n                                                        </CButton>\r\n                                                    </td>\r\n                                                )\r\n                                            },\r\n                                        'details':\r\n                                            (item, index)=>{\r\n                                            return (\r\n                                            <CCollapse show={this.state.details.includes(index)}>\r\n                                                <CCardBody style={{backgroundColor: 'rgba(46, 178, 240, 0.575)'}}>\r\n                                                    <div style={{display: 'flex'}}>\r\n                                                        <div style={{marginRight: '100px'}}>\r\n                                                            <h6>\r\n                                                                Сервисы:\r\n                                                            </h6>\r\n                                                            {item.services.map((item, index) => {\r\n                                                                return <div key={index} style={{fontSize: '18px'}}>{item.name}</div>\r\n                                                            })}\r\n                                                        </div>\r\n                                                        <div>\r\n                                                            <h6>\r\n                                                                Лицензии:\r\n                                                            </h6>\r\n                                                            {item.licenses.map((item, index) => {\r\n                                                                return <div key={index} style={{fontSize: '18px'}}>{item.name}</div>\r\n                                                            })}\r\n                                                        </div> \r\n                                                    </div>\r\n                                                </CCardBody>\r\n                                            </CCollapse>\r\n                                            )\r\n                                        }    \r\n                                    }}\r\n                                />\r\n                            </CCardBody>\r\n                            <CCardBody style={{position: 'relative', top: '0', left: '27%'}} className=\"text-body\">\r\n                                <div>\r\n                                    <div style={{fontWeight: 'bolder'}}>\r\n                                        Total cost per month:\r\n                                    </div>\r\n                                    <div>\r\n                                        {this.props.arrWithMonthCost.reduce((sum, current) => sum + current, 0)}\r\n                                    </div>\r\n                                </div>\r\n                            </CCardBody>\r\n                        </CCard>\r\n                        \r\n                    </CCol>\r\n                </CRow>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContentAdmin","import React, {Component} from 'react';\r\n\r\nimport {\r\n    CButton,\r\n    CModal,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CDropdown,\r\n    CSelect\r\n  } from '@coreui/react';\r\n\r\nclass ModalForAddService extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            change: ''\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addService = this.addService.bind(this);\r\n    };\r\n    addService() {\r\n        this.props.addService(this.state.change)\r\n    };\r\n    handleChange(event) {\r\n        this.setState({\r\n            change: event.target.value,\r\n        });\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n                <CModal \r\n                    show={this.props.isOpen} \r\n                    onClose={this.props.toggleModalWindow}\r\n                    centered={true}\r\n                >\r\n                    <CModalHeader closeButton className=\"bg-dark\">\r\n                        <CModalTitle>Выберите интересующий Вас сервис из списка</CModalTitle>\r\n                    </CModalHeader>\r\n                    <CModalBody>\r\n                        <CDropdown>\r\n                            <CSelect onChange={this.handleChange}>\r\n                                { this.props.listOfServices.map((item, index) => {\r\n                                    return <option key={index} value={item.name}>{item.name} {item.price}</option>\r\n                                }) }\r\n                            </CSelect>\r\n                        </CDropdown>\r\n                    </CModalBody>\r\n                    <CModalFooter>\r\n                        <CButton \r\n                            color=\"primary\" \r\n                            onClick={this.addService}\r\n                        >\r\n                            Ок\r\n                        </CButton>\r\n                        <CButton \r\n                            color=\"secondary\" \r\n                            onClick={this.props.toggleModalWindow}\r\n                        >\r\n                            Отмена\r\n                        </CButton>\r\n                    </CModalFooter>\r\n                </CModal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ModalForAddService","import React, {Component} from 'react';\r\n\r\nimport {\r\n    CButton,\r\n    CModal,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalHeader,\r\n    CModalTitle\r\n  } from '@coreui/react'\r\n\r\nclass ModalErrorSelectingServiceOrLicense extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <CModal \r\n                    show={this.props.isModalOpen} \r\n                    onClose={this.props.toggleModalErrorWindow}\r\n                    size=\"sm\"\r\n                >\r\n                <CModalHeader closeButton className=\"bg-dark\">\r\n                    <CModalTitle>Ошибка выбора услуги!</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    У Вас уже есть такая услуга!\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton\r\n                         color=\"primary\" \r\n                         onClick={this.props.toggleModalErrorWindow}\r\n                    >\r\n                        Ок\r\n                    </CButton>\r\n                </CModalFooter>\r\n            </CModal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ModalErrorSelectingServiceOrLicense","import React, {Component} from 'react';\r\nimport ModalForAddService from '../cloudapp/ModalForAddService';\r\nimport ModalErrorSelectingServiceOrLicense from './ModalErrorSelectingServiceOrLicense';\r\nimport firebase from 'firebase';\r\n\r\nimport {\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CDataTable,\r\n    CButton,\r\n    CRow\r\n  } from '@coreui/react';\r\n\r\nconst fields = ['name','price'];\r\n\r\nclass CurrentClientServices extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false,\r\n            isModalErrorOpen: false\r\n        }\r\n        this.toggleModalWindow = this.toggleModalWindow.bind(this);\r\n        this.toggleModalErrorWindow = this.toggleModalErrorWindow.bind(this);\r\n        this.addService = this.addService.bind(this);\r\n    };\r\n    toggleModalWindow() {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        })\r\n    };\r\n    // Toggle modal with error - if user will choose a license that is already present\r\n    toggleModalErrorWindow() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        })\r\n    };\r\n    // Database update query\r\n    addService(service) {\r\n        let allClientServices = [];\r\n        this.props.currentClientServices.forEach((item) => {\r\n            allClientServices.push(item.name)\r\n        })\r\n        this.props.listOfServices.forEach((item) => {\r\n            if (item.name === service && allClientServices.indexOf(item.name) === -1 && service !== 'Выберите услугу') {\r\n                const db = firebase.firestore();\r\n                const usersRef = db.collection('users').doc(this.props.nameOfClient);\r\n                usersRef.update({\r\n                    services: firebase.firestore.FieldValue.arrayUnion({name: item.name, price: item.price}),\r\n                    balance: this.props.balance - item.price,\r\n                    'cost-per-month': this.props.costPerMonth + item.price\r\n                });\r\n                this.toggleModalWindow();\r\n            } \r\n        });\r\n        if (allClientServices.indexOf(service) !== -1) {\r\n            this.toggleModalErrorWindow()\r\n        }\r\n    };\r\n    render() {\r\n        return (\r\n            <div className=\"flex-fill\">\r\n                <CRow>\r\n                    <CCol \r\n                        xs=\"12\" \r\n                        lg=\"10\"  \r\n                        style={{margin: '8% auto'}}\r\n                    >\r\n                        <CCard className=\"bg-gradient-light\">\r\n                            <CCardHeader className=\"text-body d-flex justify-content-between\" >\r\n                                Список сервисов\r\n                                <CButton \r\n                                    size=\"sm\" \r\n                                    color=\"dark\" \r\n                                    onClick={this.toggleModalWindow}\r\n                                >\r\n                                    Добавить сервис\r\n                                </CButton>\r\n                            </CCardHeader>\r\n                            <CCardBody>\r\n                                <CDataTable\r\n                                    items={this.props.currentClientServices}\r\n                                    fields={fields}\r\n                                    itemsPerPage={5}\r\n                                    pagination\r\n                                />\r\n                            </CCardBody>\r\n                        </CCard>\r\n                    </CCol>\r\n                </CRow>\r\n                <ModalForAddService \r\n                    toggleModalWindow={this.toggleModalWindow} \r\n                    isOpen={this.state.isOpen} \r\n                    listOfServices={this.props.listOfServices} \r\n                    addService={this.addService}\r\n                />\r\n                <ModalErrorSelectingServiceOrLicense \r\n                    toggleModalErrorWindow={this.toggleModalErrorWindow} \r\n                    isModalOpen={this.state.isModalOpen}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CurrentClientServices","import React, {Component} from 'react';\r\n\r\nimport {\r\n    CButton,\r\n    CModal,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CDropdown,\r\n    CSelect\r\n  } from '@coreui/react';\r\n\r\nclass ModalForAddLicense extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            change: ''\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addLicense = this.addLicense.bind(this);\r\n    };\r\n    addLicense() {\r\n        this.props.addLicense(this.state.change)\r\n    };\r\n    handleChange(event) {\r\n        this.setState({\r\n            change: event.target.value,\r\n        });\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n                <CModal \r\n                    show={this.props.isOpen} \r\n                    onClose={this.props.toggleModalWindow}\r\n                    centered={true}\r\n                >\r\n                    <CModalHeader closeButton className=\"bg-dark\">\r\n                        <CModalTitle>Выберите интересующую Вас лицензию из списка</CModalTitle>\r\n                    </CModalHeader>\r\n                    <CModalBody>\r\n                        <CDropdown>\r\n                            <CSelect onChange={this.handleChange}>\r\n                                { this.props.listOfLicenses.map((item, index) => {\r\n                                    return <option key={index} value={item.name}>{item.name} {item.price}</option>\r\n                                }) }\r\n                            </CSelect>\r\n                        </CDropdown>\r\n                    </CModalBody>\r\n                    <CModalFooter>\r\n                        <CButton \r\n                            color=\"primary\" \r\n                            onClick={this.addLicense}\r\n                        >\r\n                            Ок\r\n                        </CButton>\r\n                        <CButton \r\n                            color=\"secondary\" \r\n                            onClick={this.props.toggleModalWindow}\r\n                        >\r\n                            Отмена\r\n                        </CButton>\r\n                    </CModalFooter>\r\n                </CModal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ModalForAddLicense","import React, {Component} from 'react';\r\nimport ModalForAddLicense from '../cloudapp/ModalForAddLicense';\r\nimport ModalErrorSelectingServiceOrLicense from './ModalErrorSelectingServiceOrLicense';\r\nimport firebase from 'firebase';\r\n\r\nimport {\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CDataTable,\r\n    CButton,\r\n    CRow\r\n  } from '@coreui/react';\r\n\r\nconst fields = ['name','price'];\r\n\r\nclass CurrentClientLicenses extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false,\r\n        }\r\n        this.toggleModalWindow = this.toggleModalWindow.bind(this);\r\n        this.toggleModalErrorWindow = this.toggleModalErrorWindow.bind(this);\r\n        this.addLicense = this.addLicense.bind(this);\r\n    };\r\n    toggleModalWindow() {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        })\r\n    };\r\n    // Toggle modal with error - if user will choose a service that is already present\r\n    toggleModalErrorWindow() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        })\r\n    };\r\n    // Database update query\r\n    addLicense(license) {\r\n        let allClientLicenses = [];\r\n        this.props.currentClientLicenses.forEach((item) => {\r\n            allClientLicenses.push(item.name) \r\n        });\r\n        this.props.listOfLicenses.forEach((item) => {\r\n            if (item.name === license && allClientLicenses.indexOf(item.name) === -1 && license !== 'Выберите услугу') {\r\n                const db = firebase.firestore();\r\n                const usersRef = db.collection('users').doc(this.props.nameOfClient);\r\n                usersRef.update({\r\n                    licenses: firebase.firestore.FieldValue.arrayUnion({name: item.name, price: item.price}),\r\n                    balance: this.props.balance - item.price,\r\n                    'cost-per-month': this.props.costPerMonth + item.price\r\n                });\r\n                this.toggleModalWindow();\r\n            }\r\n        });\r\n        if (allClientLicenses.indexOf(license) !== -1) {\r\n            this.toggleModalErrorWindow()\r\n        }\r\n    };\r\n    render() {\r\n        return (\r\n            <div className=\"flex-fill\">\r\n                <CRow>\r\n                    <CCol \r\n                        xs=\"12\" \r\n                        lg=\"10\" \r\n                        style={{margin: '8% auto'}}\r\n                    >\r\n                        <CCard className=\"bg-gradient-light\">\r\n                            <CCardHeader className=\"text-body d-flex justify-content-between\" >\r\n                                Список лицензий\r\n                                <CButton \r\n                                    size=\"sm\" \r\n                                    color=\"dark\" \r\n                                    onClick={this.toggleModalWindow}\r\n                                >\r\n                                    Добавить лицензию\r\n                                </CButton>\r\n                            </CCardHeader>\r\n                            <CCardBody>\r\n                                <CDataTable\r\n                                    items={this.props.currentClientLicenses}\r\n                                    fields={fields}\r\n                                    itemsPerPage={5}\r\n                                    pagination\r\n                                />\r\n                            </CCardBody>\r\n                        </CCard>\r\n                    </CCol>\r\n                </CRow>\r\n                <ModalForAddLicense \r\n                    toggleModalWindow={this.toggleModalWindow} \r\n                    isOpen={this.state.isOpen} \r\n                    listOfLicenses={this.props.listOfLicenses} \r\n                    addLicense={this.addLicense}\r\n                />\r\n                <ModalErrorSelectingServiceOrLicense \r\n                    toggleModalErrorWindow={this.toggleModalErrorWindow} \r\n                    isModalOpen={this.state.isModalOpen}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CurrentClientLicenses","import React, {Component} from 'react';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CModal,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CRow,\r\n    CFormGroup,\r\n    CInput,\r\n    CLabel,\r\n    CSelect\r\n  } from '@coreui/react'\r\n\r\nclass ModalTopUpBalance extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <CModal \r\n                    show={this.props.isModalOpen} \r\n                    onClose={this.props.toggleModalWindow}\r\n                    size=\"lg\"\r\n                >\r\n                <CModalHeader closeButton className=\"bg-dark\">\r\n                    <CModalTitle>Пополнение баланса</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <CCard>\r\n                        <CCardHeader className=\"bg-dark\">\r\n                            Введите данные своей карты и сумму перевода\r\n                        </CCardHeader>\r\n                        <CCardBody>\r\n                            <CRow>\r\n                                <CCol xs=\"12\">\r\n                                <CFormGroup>\r\n                                    <CLabel htmlFor=\"name\">Имя держателя карты</CLabel>\r\n                                    <CInput id=\"name\" placeholder=\"Enter your name\" required />\r\n                                </CFormGroup>\r\n                                </CCol>\r\n                            </CRow>\r\n                            <CRow>\r\n                                <CCol xs=\"12\">\r\n                                <CFormGroup>\r\n                                    <CLabel htmlFor=\"ccnumber\">Номер карты</CLabel>\r\n                                    <CInput id=\"ccnumber\" placeholder=\"0000 0000 0000 0000\" required />\r\n                                </CFormGroup>\r\n                                </CCol>\r\n                            </CRow>\r\n                            <CRow>\r\n                                <CCol xs=\"4\">\r\n                                    <CFormGroup>\r\n                                        <CLabel htmlFor=\"ccmonth\">Месяц</CLabel>\r\n                                        <CSelect custom name=\"ccmonth\" id=\"ccmonth\">\r\n                                        <option value=\"1\">1</option>\r\n                                        <option value=\"2\">2</option>\r\n                                        <option value=\"3\">3</option>\r\n                                        <option value=\"4\">4</option>\r\n                                        <option value=\"5\">5</option>\r\n                                        <option value=\"6\">6</option>\r\n                                        <option value=\"7\">7</option>\r\n                                        <option value=\"8\">8</option>\r\n                                        <option value=\"9\">9</option>\r\n                                        <option value=\"10\">10</option>\r\n                                        <option value=\"11\">11</option>\r\n                                        <option value=\"12\">12</option>\r\n                                        </CSelect>\r\n                                    </CFormGroup>\r\n                                </CCol>\r\n                                <CCol xs=\"4\">\r\n                                    <CFormGroup>\r\n                                        <CLabel htmlFor=\"ccyear\">Год</CLabel>\r\n                                        <CSelect custom name=\"ccyear\" id=\"ccyear\">\r\n                                        <option>2017</option>\r\n                                        <option>2018</option>\r\n                                        <option>2019</option>\r\n                                        <option>2020</option>\r\n                                        <option>2021</option>\r\n                                        <option>2022</option>\r\n                                        <option>2023</option>\r\n                                        <option>2024</option>\r\n                                        <option>2025</option>\r\n                                        <option>2026</option>\r\n                                        </CSelect>\r\n                                    </CFormGroup>\r\n                                </CCol>\r\n                                <CCol xs=\"4\">\r\n                                    <CFormGroup>\r\n                                        <CLabel htmlFor=\"cvv\">CVV/CVC</CLabel>\r\n                                        <CInput id=\"cvv\" placeholder=\"123\" required/>\r\n                                    </CFormGroup>\r\n                                </CCol>\r\n                            </CRow>\r\n                            <CRow>\r\n                                <CCol xs=\"12\">\r\n                                <CFormGroup>\r\n                                    <CLabel htmlFor=\"name\">Введите сумму перевода</CLabel>\r\n                                    <CInput id=\"amount\" placeholder=\"Enter the amount\" required />\r\n                                </CFormGroup>\r\n                                </CCol>\r\n                            </CRow>\r\n                        </CCardBody>\r\n                    </CCard>\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"primary\">Пополнить</CButton>\r\n                    <CButton color=\"secondary\" onClick={this.props.toggleModalWindow}>Cancel</CButton>\r\n                </CModalFooter>\r\n            </CModal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ModalTopUpBalance","import React, {Component} from 'react';\r\nimport CurrentClientServices from '../cloudapp/CurrentClientServices';\r\nimport CurrentClientLicenses from '../cloudapp/CurrentClientLicenses';\r\nimport ModalTopUpBalance from '../cloudapp/ModalTopUpBalance';\r\n\r\nimport {\r\n    CCard,\r\n    CCardBody,\r\n    CButton,\r\n    CCol\r\n  } from  '@coreui/react'\r\n\r\nclass ContentClient extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n        this.toggleModalWindow = this.toggleModalWindow.bind(this);\r\n    };\r\n    toggleModalWindow() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        })\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"d-flex justify-content-between flex-wrap\">\r\n                    <CCol \r\n                        xs=\"12\" \r\n                        sm=\"6\" \r\n                        md=\"3\"\r\n                    >\r\n                        <CCard className=\"bg-dark\">\r\n                            <CCardBody className=\"text-center\">\r\n                                Личный кабинет клиента: {this.props.currentClient.name}\r\n                            </CCardBody>\r\n                        </CCard>\r\n                    </CCol>\r\n                    <CCol xs=\"12\" sm=\"6\" md=\"3\">\r\n                        <CCard className=\"bg-dark\">\r\n                            <CCardBody className=\"d-flex flex-column text-center\">\r\n                                Баланс клиента: {this.props.currentClient.balance}\r\n                                <CButton \r\n                                    color=\"primary\" \r\n                                    className=\"mt-1\" \r\n                                    onClick={this.toggleModalWindow}\r\n                                >\r\n                                    Пополнить баланс\r\n                                </CButton>\r\n                            </CCardBody>\r\n                            \r\n                        </CCard>\r\n                    </CCol>\r\n                </div>\r\n                <div className=\"d-flex flex-wrap\">\r\n                    <CurrentClientServices \r\n                        currentClientServices={this.props.currentClient.services} \r\n                        listOfServices={this.props.listOfServices} \r\n                        nameOfClient={this.props.nameOfClient} \r\n                        balance={this.props.currentClient.balance} \r\n                        costPerMonth={this.props.currentClient['cost-per-month']}\r\n                    />\r\n                    <CurrentClientLicenses \r\n                        currentClientLicenses={this.props.currentClient.licenses} \r\n                        listOfLicenses={this.props.listOfLicenses} \r\n                        nameOfClient={this.props.nameOfClient} \r\n                        balance={this.props.currentClient.balance} \r\n                        costPerMonth={this.props.currentClient['cost-per-month']}\r\n                    />\r\n                </div>\r\n                <ModalTopUpBalance \r\n                    toggleModalWindow={this.toggleModalWindow} \r\n                    isModalOpen={this.state.isModalOpen}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContentClient","import React, {Component} from 'react';\r\n\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CRow\r\n} from '@coreui/react';\r\nimport CIcon from '@coreui/icons-react';\r\n\r\nclass AdminLogin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            login: '',\r\n            password: ''\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.sendLoginAndPassword = this.sendLoginAndPassword.bind(this);\r\n    };\r\n    handleChange({target: {value, id}}) {\r\n        this.setState({\r\n            [id]: value\r\n        })\r\n    };\r\n    sendLoginAndPassword() {\r\n        this.props.sendLoginAndPassword(this.state.login, this.state.password)\r\n    };\r\n    render() {\r\n        return (\r\n            <div className=\"c-main c-default-layout flex-row align-items-center\">\r\n                <CContainer style={{margin: '8% auto'}}>\r\n                    <CRow className=\"justify-content-center\">\r\n                        <CCol md=\"8\">\r\n                            <CCardGroup>\r\n                                <CCard className=\"p-4\">\r\n                                    <CCardBody>\r\n                                        <CForm>\r\n                                            <h1>Авторизируйтесь!</h1>\r\n                                            <p className=\"text-muted\">Администратор войдите в свой аккаунт</p>\r\n                                            <CInputGroup className=\"mb-3\">\r\n                                                <CInputGroupPrepend>\r\n                                                    <CInputGroupText>\r\n                                                    <CIcon name=\"cil-user\" />\r\n                                                    </CInputGroupText>\r\n                                                </CInputGroupPrepend>\r\n                                                <CInput \r\n                                                    type=\"text\" \r\n                                                    placeholder=\"Login\" \r\n                                                    autoComplete=\"login\" \r\n                                                    id=\"login\" \r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                            </CInputGroup>\r\n                                            <CInputGroup className=\"mb-4\">\r\n                                                <CInputGroupPrepend>\r\n                                                    <CInputGroupText>\r\n                                                    <CIcon name=\"cil-lock-locked\" />\r\n                                                    </CInputGroupText>\r\n                                                </CInputGroupPrepend>\r\n                                                <CInput \r\n                                                    type=\"password\" \r\n                                                    placeholder=\"Password\" \r\n                                                    autoComplete=\"current-password\" \r\n                                                    id=\"password\" \r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                            </CInputGroup>\r\n                                            <CRow>\r\n                                                <CCol xs=\"6\">\r\n                                                    <CButton \r\n                                                    color=\"primary\" \r\n                                                    className=\"px-4\" \r\n                                                    onClick={this.sendLoginAndPassword}\r\n                                                >\r\n                                                    Войти\r\n                                                </CButton>\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                        </CForm>\r\n                                    </CCardBody>\r\n                                </CCard>\r\n                            </CCardGroup>\r\n                        </CCol>\r\n                    </CRow>\r\n                </CContainer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AdminLogin","import React, {Component} from 'react';\r\n\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CRow\r\n} from '@coreui/react';\r\nimport CIcon from '@coreui/icons-react';\r\n\r\nclass ClientLogin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            login: '',\r\n            password: ''\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.sendLoginAndPassword = this.sendLoginAndPassword.bind(this)\r\n    };\r\n    handleChange({target: {value, id}}) {\r\n        this.setState({\r\n            [id]: value\r\n        })\r\n    };\r\n    sendLoginAndPassword() {\r\n        this.props.sendLoginAndPassword(this.state.login, this.state.password)\r\n    };\r\n    render() {\r\n        return (\r\n            <div className=\"c-main c-default-layout flex-row align-items-center\">\r\n            <CContainer style={{margin: '8% auto'}}>\r\n                <CRow className=\"justify-content-center\">\r\n                    <CCol md=\"8\">\r\n                        <CCardGroup>\r\n                            <CCard className=\"p-4\">\r\n                                <CCardBody>\r\n                                    <CForm>\r\n                                        <h1>Авторизируйтесь!</h1>\r\n                                        <p className=\"text-muted\">Клиент войдите в свой аккаунт</p>\r\n                                        <CInputGroup className=\"mb-3\">\r\n                                            <CInputGroupPrepend>\r\n                                                <CInputGroupText>\r\n                                                <CIcon name=\"cil-user\" />\r\n                                                </CInputGroupText>\r\n                                            </CInputGroupPrepend>\r\n                                            <CInput \r\n                                                type=\"text\"\r\n                                                 placeholder=\"Login\" \r\n                                                 autoComplete=\"login\" \r\n                                                 id=\"login\" \r\n                                                 onChange={this.handleChange}\r\n                                            />\r\n                                        </CInputGroup>\r\n                                        <CInputGroup className=\"mb-4\">\r\n                                            <CInputGroupPrepend>\r\n                                                <CInputGroupText>\r\n                                                <CIcon name=\"cil-lock-locked\" />\r\n                                                </CInputGroupText>\r\n                                            </CInputGroupPrepend>\r\n                                            <CInput \r\n                                                type=\"password\" \r\n                                                placeholder=\"Password\" \r\n                                                autoComplete=\"current-password\" \r\n                                                id=\"password\" \r\n                                                onChange={this.handleChange}\r\n                                            />\r\n                                        </CInputGroup>\r\n                                        <CRow>\r\n                                            <CCol xs=\"6\">\r\n                                                <CButton \r\n                                                color=\"primary\" \r\n                                                className=\"px-4\" \r\n                                                onClick={this.sendLoginAndPassword}\r\n                                            >\r\n                                                Войти\r\n                                            </CButton>\r\n                                            </CCol>\r\n                                        </CRow>\r\n                                    </CForm>\r\n                                </CCardBody>\r\n                            </CCard>\r\n                        </CCardGroup>\r\n                    </CCol>\r\n                </CRow>\r\n            </CContainer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ClientLogin","import React, {Component} from 'react';\r\n\r\nimport {\r\n    CButton,\r\n    CModal,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalHeader,\r\n    CModalTitle\r\n  } from '@coreui/react'\r\n\r\nclass ModalErrorLogin extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <CModal \r\n                    show={this.props.isModalOpen} \r\n                    onClose={this.props.toggleModaErrorlWindow}\r\n                    size=\"sm\"\r\n                >\r\n                <CModalHeader closeButton className=\"bg-dark\">\r\n                    <CModalTitle>Ошибка авторизации!</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    Такого пользователя не существует! Проверьте правильность ввода логина или пароля.\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton \r\n                        color=\"primary\" \r\n                        onClick={this.props.toggleModaErrorlWindow}\r\n                    >\r\n                        Ок\r\n                    </CButton>\r\n                </CModalFooter>\r\n            </CModal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ModalErrorLogin","import React, {Component} from 'react';\r\n\r\nimport { CFooter } from '@coreui/react';\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <CFooter \r\n                    fixed={true} \r\n                    className=\"bg-dark text-white\"\r\n                >\r\n                    <div className=\"mfs-auto\">\r\n                        <span className=\"mr-1\">Powered by</span>\r\n                        <a \r\n                            href=\"https://coreui.io/react\" \r\n                            target=\"_blank\" \r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            CoreUI for React\r\n                        </a>\r\n                    </div>\r\n                </CFooter>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer","import React, {Component} from 'react';\r\nimport NavBar from '../cloudapp/NavBar';\r\nimport ContentAdmin from './ContentAdmin';\r\nimport ContentClient from './ContentClient';\r\nimport AdminLogin from '../cloudapp/AdminLogin';\r\nimport ClientLogin from '../cloudapp/ClientLogin';\r\nimport ModalErrorLogin from './ModalErrorLogin';\r\nimport Footer from '../cloudapp/Footer';\r\nimport firebase from 'firebase';\r\n\r\nimport {\r\n    CCard,\r\n    CCardBody,\r\n    CCol\r\n  } from  '@coreui/react';\r\n\r\nclass MainPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            clientData: [],\r\n            roleData: [],\r\n            listOfServices: [],\r\n            listOfLicenses: [],\r\n            arrWithAdminLogins: [],\r\n            arrWithAdminPasswords: [],\r\n            arrWithClientLogins: [],\r\n            arrWithClientPasswords: [],\r\n            arrWithMonthCost: [],\r\n            role: '',\r\n            login: '',\r\n            password: '',\r\n            isOnline: false,\r\n            isModalOpen: false\r\n        };\r\n        this.saveUserRole = this.saveUserRole.bind(this);\r\n        this.saveAdminLoginAndPassword = this.saveAdminLoginAndPassword.bind(this);\r\n        this.saveClientLoginAndPassword = this.saveClientLoginAndPassword.bind(this);\r\n        this.saveInLocalStorage = this.saveInLocalStorage.bind(this);\r\n        this.logOut = this.logOut.bind(this);\r\n        this.toggleModaErrorlWindow = this.toggleModaErrorlWindow.bind(this);\r\n    };\r\n    componentDidMount() {\r\n        // Database queries\r\n        const db = firebase.firestore();\r\n        const roleRef = db.collection('users').doc('role');\r\n        roleRef.get().then((doc) => {\r\n            this.setState({\r\n                roleData: doc.data().role\r\n            })\r\n        }).catch(function(error) {\r\n            console.log(error)\r\n        });\r\n        const adminsRef = db.collection('users').doc('admins');\r\n        adminsRef.get().then((doc) => {\r\n            this.setState({\r\n                arrWithAdminLogins: doc.data().admins.map((item) => item.login),\r\n                arrWithAdminPasswords: doc.data().admins.map((item) => item.password)\r\n            })\r\n        }).catch(function(error) {\r\n            console.log(error)\r\n        });\r\n        const clientsRef = db.collection('users').where(\"isClient\", \"==\", true);\r\n        clientsRef.onSnapshot((querySnapshot) => {\r\n            let clientData = [];\r\n            let clientLogins = [];\r\n            let clientPasswords = [];\r\n            let costPerMonth = [];\r\n            querySnapshot.forEach((doc) => {\r\n                clientData.push(doc.data());\r\n                clientLogins.push(doc.data().login);\r\n                clientPasswords.push(doc.data().password);\r\n                costPerMonth.push(doc.data()['cost-per-month'])\r\n            });\r\n            this.setState({\r\n                clientData,\r\n                arrWithClientLogins: clientLogins,\r\n                arrWithClientPasswords: clientPasswords,\r\n                arrWithMonthCost: costPerMonth\r\n            })\r\n        });\r\n        const servicesRef = db.collection('users').doc('services');\r\n        servicesRef.get().then((doc) => {\r\n            this.setState({\r\n                listOfServices: doc.data().services\r\n            })\r\n        }).catch(function(error) {\r\n            console.log(error)\r\n        });\r\n        const licensesRef = db.collection('users').doc('licenses');\r\n        licensesRef.get().then((doc) => {\r\n            this.setState({\r\n                listOfLicenses: doc.data().licenses\r\n            })\r\n        }).catch(function(error) {\r\n            console.log(error)\r\n        });\r\n        // Data extraction from local storage\r\n        const login = localStorage.getItem('login');\r\n        const password = localStorage.getItem('password');\r\n        const isOnline = localStorage.getItem('isOnline') === 'true';\r\n        this.setState({\r\n            login,\r\n            password,\r\n            isOnline\r\n        })\r\n    };\r\n    saveUserRole(item) {\r\n        this.setState({\r\n            role: item\r\n        });\r\n    };\r\n    // Save logins and passwords in locale storage so that user remains in the system when the page is reloaded\r\n    saveAdminLoginAndPassword(login, password) {\r\n        if( this.state.arrWithAdminLogins.indexOf(login) !== -1 && this.state.arrWithAdminPasswords.indexOf(password) !== -1 ) {\r\n            this.setState({\r\n                login,\r\n                password,\r\n                isOnline: true,\r\n                role: ''\r\n            }, () => this.saveInLocalStorage());\r\n            localStorage.setItem('login', login);\r\n            localStorage.setItem('password', password);\r\n        } else {\r\n            this.toggleModaErrorlWindow();\r\n        }\r\n    };\r\n    saveClientLoginAndPassword(login, password) {\r\n        if( this.state.arrWithClientLogins.indexOf(login) !== -1 && this.state.arrWithClientPasswords.indexOf(password) !== -1 ) {\r\n            this.setState({\r\n                login,\r\n                password,\r\n                isOnline: true,\r\n                role: ''\r\n            }, () => this.saveInLocalStorage());\r\n            localStorage.setItem('login', login);\r\n            localStorage.setItem('password', password);\r\n            localStorage.setItem('isOnline', this.state.isOnline);\r\n        } else {\r\n            this.toggleModaErrorlWindow();\r\n        }\r\n    };\r\n    saveInLocalStorage() {\r\n        localStorage.setItem('isOnline', this.state.isOnline);\r\n    };\r\n    // Toggle modal with error of authorisation if login or password are not in the data base\r\n    toggleModaErrorlWindow() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        })\r\n    };\r\n    logOut() {\r\n        this.setState({\r\n            login: '',\r\n            password: '',\r\n            isOnline: false,\r\n            role: ''\r\n        })\r\n        localStorage.clear();\r\n    };\r\n    render() {\r\n        // Conditions for displaying different pages in app(login windows, admin and client accounts if this admin or client is in data base, welcome page)\r\n        let loginPage;\r\n        if ( this.state.role === 'Admin' ) {\r\n            loginPage = <AdminLogin sendLoginAndPassword={this.saveAdminLoginAndPassword}/>\r\n        } else if( this.state.role === 'Client' ) {\r\n            loginPage = <ClientLogin sendLoginAndPassword={this.saveClientLoginAndPassword}/>\r\n        };\r\n        let contentPage;\r\n        if ( this.state.arrWithAdminLogins.indexOf(this.state.login) !== -1 && this.state.arrWithAdminPasswords.indexOf(this.state.password) !== -1 ) {\r\n            contentPage =   <div>\r\n                                <ContentAdmin \r\n                                    data={this.state.clientData} \r\n                                    arrWithMonthCost={this.state.arrWithMonthCost}\r\n                                />\r\n                            </div> \r\n        } else if ( this.state.arrWithClientLogins.indexOf(this.state.login) !== -1 && this.state.arrWithClientPasswords.indexOf(this.state.password) !== -1 ) {\r\n            contentPage =   <div>\r\n                                { this.state.clientData.map((item, index) => {\r\n                                    if (this.state.login === item.login) {\r\n                                        return <ContentClient \r\n                                                    key={index} \r\n                                                    currentClient={item} \r\n                                                    listOfServices={this.state.listOfServices} \r\n                                                    listOfLicenses={this.state.listOfLicenses} \r\n                                                    nameOfClient={this.state.login}\r\n                                                />\r\n                                    }\r\n                                })}\r\n                            </div> \r\n        }; \r\n        let welcomePage;\r\n        if ( !this.state.isOnline && this.state.role === '' ) {\r\n            welcomePage =   <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                                <CCol \r\n                                    xs=\"12\" \r\n                                    sm=\"10\" \r\n                                    md=\"5\" \r\n                                    style={{fontSize: '20px', margin: '8% auto'}}\r\n                                >\r\n                                    <CCard className=\"bg-info\">\r\n                                        <CCardBody>\r\n                                            Добро пожаловать в наш облачный сервис. \r\n                                            Здесь вы сможете арендовать микросервисы и специальные лицензии на клиентские подключения к ним. \r\n                                            Выберите роль в правом верхнем углу, затем авторизируйтесь.\r\n                                        </CCardBody>\r\n                                    </CCard>\r\n                                </CCol>\r\n                            </div>\r\n        };\r\n        return (\r\n            <div>\r\n                <NavBar \r\n                    sendUserRole={this.saveUserRole} \r\n                    role={this.state.roleData} \r\n                    isOnline={this.state.isOnline} \r\n                    logOut={this.logOut}\r\n                />\r\n                { loginPage }\r\n                { contentPage }\r\n                { welcomePage }\r\n                <ModalErrorLogin \r\n                    toggleModaErrorlWindow={this.toggleModaErrorlWindow}\r\n                    isModalOpen={this.state.isModalOpen}\r\n                />\r\n                <Footer/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainPage\r\n","import React, { Component } from 'react';\nimport './scss/style.scss';\nimport './scss/_custom.scss';\nimport MainPage from './cloudapp/MainPage';\n\nclass App extends Component {\n  render() {\n    return (\n      <MainPage/>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const sygnet = ['160 160', `\n  <title>coreui logo</title>\n  <g>\n    <g style=\"fill:#fff;\">\n      <path d=\"M125,47.091,86,24.5743a12,12,0,0,0-12,0L35,47.091a12.0336,12.0336,0,0,0-6,10.3923v45.0334a12.0335,12.0335,0,0,0,6,10.3923l39,22.5166a11.9993,11.9993,0,0,0,12,0l39-22.5166a12.0335,12.0335,0,0,0,6-10.3923V57.4833A12.0336,12.0336,0,0,0,125,47.091Zm-2,55.4257a4,4,0,0,1-2,3.464L82,128.4974a4,4,0,0,1-4,0L39,105.9807a4,4,0,0,1-2-3.464V57.4833a4,4,0,0,1,2-3.4641L78,31.5025a4,4,0,0,1,4,0l39,22.5167a4,4,0,0,1,2,3.4641Z\"/>\n      <path d=\"M103.0216,93.0379h-2.866a4,4,0,0,0-1.9246.4935L80.95,103.0167,61,91.4981V68.5206L80.95,57.002l17.2894,9.455a4,4,0,0,0,1.9192.4905h2.8632a2,2,0,0,0,2-2V62.2357a2,2,0,0,0-1.04-1.7547L84.793,49.9854a8.0391,8.0391,0,0,0-7.8428.09L57,61.5929A8.0243,8.0243,0,0,0,53,68.5216v22.976a8,8,0,0,0,4,6.9283l19.95,11.5185a8.0422,8.0422,0,0,0,7.8433.0879l19.19-10.5311a2,2,0,0,0,1.0378-1.7534v-2.71A2,2,0,0,0,103.0216,93.0379Z\"/>\n    </g>\n  </g>\n`]\n","import { sygnet } from './sygnet'\nimport { logo } from './logo'\nimport { logoNegative } from './logo-negative'\n\nimport {\n  cibSkype,\n  cibFacebook,\n  cibTwitter,\n  cibLinkedin,\n  cibFlickr,\n  cibTumblr,\n  cibXing,\n  cibGithub,\n  cibStackoverflow,\n  cibYoutube,\n  cibDribbble,\n  cibInstagram,\n  cibPinterest,\n  cibVk,\n  cibYahoo,\n  cibBehance,\n  cibReddit,\n  cibVimeo,\n  cibCcMastercard,\n  cibCcVisa,\n  cibStripe,\n  cibPaypal,\n  cibGooglePay,\n  cibCcAmex\n} from '@coreui/icons'\nimport {\n  cifUs,\n  cifBr,\n  cifIn,\n  cifFr,\n  cifEs,\n  cifPl\n} from '@coreui/icons'\nimport {\n  cilAlignCenter,\n  cilAlignLeft,\n  cilAlignRight,\n  cilApplicationsSettings,\n  cilArrowRight,\n  cilArrowTop,\n  cilAsterisk,\n  cilBan,\n  cilBasket,\n  cilBell,\n  cilBold,\n  cilBookmark,\n  cilCalculator,\n  cilCalendar,\n  cilCloudDownload,\n  cilChartPie,\n  cilCheck,\n  cilChevronBottom,\n  cilChevronLeft,\n  cilChevronRight,\n  cilChevronTop,\n  cilCircle,\n  cilCheckCircle,\n  cilCode,\n  cilCommentSquare,\n  cilCreditCard,\n  cilCursor,\n  cilCursorMove,\n  cilDrop,\n  cilDollar,\n  cilEnvelopeClosed,\n  cilEnvelopeLetter,\n  cilEnvelopeOpen,\n  cilEuro,\n  cilGlobeAlt,\n  cilGrid,\n  cilFile,\n  cilFullscreen,\n  cilFullscreenExit,\n  cilGraph,\n  cilHome,\n  cilInbox,\n  cilIndentDecrease,\n  cilIndentIncrease,\n  cilInputPower,\n  cilItalic,\n  cilJustifyCenter,\n  cilJustifyLeft,\n  cilLaptop,\n  cilLayers,\n  cilLightbulb,\n  cilList,\n  cilListNumbered,\n  cilListRich,\n  cilLocationPin,\n  cilLockLocked,\n  cilMagnifyingGlass,\n  cilMap,\n  cilMoon,\n  cilNotes,\n  cilOptions,\n  cilPaperclip,\n  cilPaperPlane,\n  cilPencil,\n  cilPeople,\n  cilPhone,\n  cilPrint,\n  cilPuzzle,\n  cilSave,\n  cilScrubber,\n  cilSettings,\n  cilShare,\n  cilShareAll,\n  cilShareBoxed,\n  cilShieldAlt,\n  cilSpeech,\n  cilSpeedometer,\n  cilSpreadsheet,\n  cilStar,\n  cilSun,\n  cilTags,\n  cilTask,\n  cilTrash,\n  cilUnderline,\n  cilUser,\n  cilUserFemale,\n  cilUserFollow,\n  cilUserUnfollow,\n  cilX,\n  cilXCircle,\n  cilWarning\n} from '@coreui/icons'\n\nexport const icons = Object.assign({}, {\n  sygnet,\n  logo,\n  logoNegative\n}, {\n  cilAlignCenter,\n  cilAlignLeft,\n  cilAlignRight,\n  cilApplicationsSettings,\n  cilArrowRight,\n  cilArrowTop,\n  cilAsterisk,\n  cilBan,\n  cilBasket,\n  cilBell,\n  cilBold,\n  cilBookmark,\n  cilCalculator,\n  cilCalendar,\n  cilCloudDownload,\n  cilChartPie,\n  cilCheck,\n  cilChevronBottom,\n  cilChevronLeft,\n  cilChevronRight,\n  cilChevronTop,\n  cilCircle,\n  cilCheckCircle,\n  cilCode,\n  cilCommentSquare,\n  cilCreditCard,\n  cilCursor,\n  cilCursorMove,\n  cilDrop,\n  cilDollar,\n  cilEnvelopeClosed,\n  cilEnvelopeLetter,\n  cilEnvelopeOpen,\n  cilEuro,\n  cilGlobeAlt,\n  cilGrid,\n  cilFile,\n  cilFullscreen,\n  cilFullscreenExit,\n  cilGraph,\n  cilHome,\n  cilInbox,\n  cilIndentDecrease,\n  cilIndentIncrease,\n  cilInputPower,\n  cilItalic,\n  cilJustifyCenter,\n  cilJustifyLeft,\n  cilLaptop,\n  cilLayers,\n  cilLightbulb,\n  cilList,\n  cilListNumbered,\n  cilListRich,\n  cilLocationPin,\n  cilLockLocked,\n  cilMagnifyingGlass,\n  cilMap,\n  cilMoon,\n  cilNotes,\n  cilOptions,\n  cilPaperclip,\n  cilPaperPlane,\n  cilPencil,\n  cilPeople,\n  cilPhone,\n  cilPrint,\n  cilPuzzle,\n  cilSave,\n  cilScrubber,\n  cilSettings,\n  cilShare,\n  cilShareAll,\n  cilShareBoxed,\n  cilShieldAlt,\n  cilSpeech,\n  cilSpeedometer,\n  cilSpreadsheet,\n  cilStar,\n  cilSun,\n  cilTags,\n  cilTask,\n  cilTrash,\n  cilUnderline,\n  cilUser,\n  cilUserFemale,\n  cilUserFollow,\n  cilUserUnfollow,\n  cilX,\n  cilXCircle,\n  cilWarning\n}, {\n  cifUs,\n  cifBr,\n  cifIn,\n  cifFr,\n  cifEs,\n  cifPl\n}, {\n  cibSkype,\n  cibFacebook,\n  cibTwitter,\n  cibLinkedin,\n  cibFlickr,\n  cibTumblr,\n  cibXing,\n  cibGithub,\n  cibStackoverflow,\n  cibYoutube,\n  cibDribbble,\n  cibInstagram,\n  cibPinterest,\n  cibVk,\n  cibYahoo,\n  cibBehance,\n  cibReddit,\n  cibVimeo,\n  cibCcMastercard,\n  cibCcVisa,\n  cibStripe,\n  cibPaypal,\n  cibGooglePay,\n  cibCcAmex\n})\n","export const logo = ['608 134', `\n  <title>coreui react pro</title>\n  <g>\n    <g style=\"fill:#00a1ff\">\n      <path d=\"M362.0177,90.1512,353.25,69.4149a.2507.2507,0,0,0-.2559-.1914H343.01a.2263.2263,0,0,0-.2559.2559V90.0233a.5657.5657,0,0,1-.64.64h-1.2163a.5652.5652,0,0,1-.64-.64V46.5028a.5655.5655,0,0,1,.64-.64H353.442a9.9792,9.9792,0,0,1,7.7437,3.2324A12.2,12.2,0,0,1,364.13,57.64a12.4389,12.4389,0,0,1-2.24,7.584,9.37,9.37,0,0,1-6.08,3.7441c-.1709.086-.2139.1915-.128.3194l8.7041,20.6084.064.2558q0,.5127-.5757.5118h-1.1523A.703.703,0,0,1,362.0177,90.1512ZM342.754,48.3593v18.496a.2259.2259,0,0,0,.2559.2559h10.3037a7.6713,7.6713,0,0,0,6.0166-2.5918,9.8807,9.8807,0,0,0,2.3037-6.8164,10.2875,10.2875,0,0,0-2.272-6.9756,7.6033,7.6033,0,0,0-6.0483-2.624H343.01A.2263.2263,0,0,0,342.754,48.3593Z\"/>\n      <path d=\"M401.3263,48.1034H381.2945a.2262.2262,0,0,0-.2558.2559v18.496a.2259.2259,0,0,0,.2558.2559h13.8238a.5664.5664,0,0,1,.6406.64v.96a.5663.5663,0,0,1-.6406.6406H381.2945a.2263.2263,0,0,0-.2558.2559v18.56a.2258.2258,0,0,0,.2558.2558h20.0318a.5671.5671,0,0,1,.6406.6407v.96a.566.566,0,0,1-.6406.64H379.1827a.5653.5653,0,0,1-.64-.64V46.5028a.5656.5656,0,0,1,.64-.64h22.1436a.5664.5664,0,0,1,.6406.64v.96A.5663.5663,0,0,1,401.3263,48.1034Z\"/>\n      <path d=\"M439.047,90.1512l-2.4317-8.832a.2971.2971,0,0,0-.32-.1924H419.5274a.2957.2957,0,0,0-.32.1924l-2.3681,8.7676a.6577.6577,0,0,1-.7036.5762H414.919a.5385.5385,0,0,1-.5756-.7041l12.0317-43.584a.6436.6436,0,0,1,.7041-.5117h1.6a.6442.6442,0,0,1,.7041.5117l12.16,43.584.0644.1923q0,.5127-.64.5118h-1.2163A.6428.6428,0,0,1,439.047,90.1512ZM419.9435,78.9188a.3031.3031,0,0,0,.2236.0967h15.4883a.3048.3048,0,0,0,.2236-.0967c.0645-.0635.0742-.1162.0322-.1592l-7.872-28.9287c-.043-.0849-.086-.1279-.128-.1279s-.0859.043-.1279.1279L419.9112,78.76C419.8683,78.8026,419.879,78.8553,419.9435,78.9188Z\"/>\n      <path d=\"M456.6017,87.911a11.6372,11.6372,0,0,1-3.3277-8.7041V57.1913a11.4158,11.4158,0,0,1,3.36-8.5762,12.0941,12.0941,0,0,1,8.8-3.2637,12.2566,12.2566,0,0,1,8.8643,3.2315,11.3927,11.3927,0,0,1,3.36,8.6084v.64a.5663.5663,0,0,1-.6406.6407l-1.28.0634q-.6408,0-.64-.5761v-.8321a9.289,9.289,0,0,0-2.6558-6.9121,10.6734,10.6734,0,0,0-14.0161,0,9.2854,9.2854,0,0,0-2.6563,6.9121V79.3993a9.2808,9.2808,0,0,0,2.6563,6.9121,10.67,10.67,0,0,0,14.0161,0,9.2843,9.2843,0,0,0,2.6558-6.9121v-.7686q0-.5757.64-.5752l1.28.0635a.5667.5667,0,0,1,.6406.6406v.5118a11.4952,11.4952,0,0,1-3.36,8.64,13.6227,13.6227,0,0,1-17.6963,0Z\"/>\n      <path d=\"M514.4376,46.5028v.96a.5658.5658,0,0,1-.64.6406H503.046a.2263.2263,0,0,0-.2559.2559v41.664a.566.566,0,0,1-.6406.64h-1.2158a.5652.5652,0,0,1-.64-.64V48.3593a.2266.2266,0,0,0-.2558-.2559H489.8619a.5656.5656,0,0,1-.64-.6406v-.96a.5656.5656,0,0,1,.64-.64H513.798A.5658.5658,0,0,1,514.4376,46.5028Z\"/>\n      <path d=\"M522.0665,89.5116a2.8385,2.8385,0,0,1-.8-2.0488,2.9194,2.9194,0,0,1,.8-2.1114,2.7544,2.7544,0,0,1,2.08-.832,2.8465,2.8465,0,0,1,2.9438,2.9434,2.7541,2.7541,0,0,1-.832,2.08,2.9221,2.9221,0,0,1-2.1118.8008A2.754,2.754,0,0,1,522.0665,89.5116Z\"/>\n      <path d=\"M542.4054,88.0077a11.3123,11.3123,0,0,1-3.2-8.416v-5.44a.5656.5656,0,0,1,.64-.64h1.2158a.5661.5661,0,0,1,.64.64v5.5039a9.1424,9.1424,0,0,0,2.5283,6.72,8.9745,8.9745,0,0,0,6.6875,2.5605,8.7908,8.7908,0,0,0,9.28-9.28V46.5028a.5655.5655,0,0,1,.64-.64h1.2163a.566.566,0,0,1,.64.64V79.5917a11.2545,11.2545,0,0,1-3.2325,8.416,13.0618,13.0618,0,0,1-17.0556,0Z\"/>\n      <path d=\"M580.35,88.1034a10.4859,10.4859,0,0,1-3.36-8.1279v-1.792a.5663.5663,0,0,1,.64-.6407h1.0884a.5668.5668,0,0,1,.64.6407v1.6a8.5459,8.5459,0,0,0,2.752,6.6562,10.5353,10.5353,0,0,0,7.36,2.4961,9.8719,9.8719,0,0,0,6.9761-2.3681,8.2161,8.2161,0,0,0,2.56-6.336,8.4,8.4,0,0,0-1.12-4.416,11.3812,11.3812,0,0,0-3.3281-3.3926,71.6714,71.6714,0,0,0-6.1763-3.7119,71.0479,71.0479,0,0,1-6.24-3.84,12.1711,12.1711,0,0,1-3.4238-3.68,10.2614,10.2614,0,0,1-1.28-5.3438,9.8579,9.8579,0,0,1,3.0718-7.7441,12.0122,12.0122,0,0,1,8.32-2.752q5.6954,0,8.96,3.1036a10.8251,10.8251,0,0,1,3.2642,8.2246v1.6a.5658.5658,0,0,1-.64.64h-1.1519a.5652.5652,0,0,1-.64-.64V56.8075a8.8647,8.8647,0,0,0-2.624-6.6885,9.9933,9.9933,0,0,0-7.232-2.5273,9.37,9.37,0,0,0-6.5278,2.1435,7.8224,7.8224,0,0,0-2.3682,6.1123,7.8006,7.8006,0,0,0,1.0244,4.16,10.387,10.387,0,0,0,3.0078,3.0391,62.8714,62.8714,0,0,0,5.9522,3.4882,71.0575,71.0575,0,0,1,6.72,4.2559,13.4674,13.4674,0,0,1,3.648,3.9365,10.049,10.049,0,0,1,1.28,5.1836,10.7177,10.7177,0,0,1-3.2637,8.1924q-3.2637,3.0717-8.832,3.0723Q583.71,91.1757,580.35,88.1034Z\"/>\n    </g>\n    <g style=\"fill:#3c4b64\">\n      <g>\n        <path d=\"M99.835,36.0577l-39-22.5167a12,12,0,0,0-12,0l-39,22.5166a12.0339,12.0339,0,0,0-6,10.3924V91.4833a12.0333,12.0333,0,0,0,6,10.3923l39,22.5167a12,12,0,0,0,12,0l39-22.5167a12.0331,12.0331,0,0,0,6-10.3923V46.45A12.0334,12.0334,0,0,0,99.835,36.0577Zm-2,55.4256a4,4,0,0,1-2,3.4641l-39,22.5167a4.0006,4.0006,0,0,1-4,0l-39-22.5167a4,4,0,0,1-2-3.4641V46.45a4,4,0,0,1,2-3.4642l39-22.5166a4,4,0,0,1,4,0l39,22.5166a4,4,0,0,1,2,3.4642Z\"/>\n        <path d=\"M77.8567,82.0046h-2.866a4,4,0,0,0-1.9247.4934L55.7852,91.9833,35.835,80.4648V57.4872l19.95-11.5185,17.2893,9.4549a3.9993,3.9993,0,0,0,1.9192.4906h2.8632a2,2,0,0,0,2-2V51.2024a2,2,0,0,0-1.04-1.7547L59.628,38.9521a8.0391,8.0391,0,0,0-7.8428.09L31.8346,50.56a8.0246,8.0246,0,0,0-4,6.9287v22.976a8,8,0,0,0,4,6.9283l19.95,11.5186a8.0429,8.0429,0,0,0,7.8433.0879l19.19-10.5312a2,2,0,0,0,1.0378-1.7533v-2.71A2,2,0,0,0,77.8567,82.0046Z\"/>\n      </g>\n      <g>\n        <path d=\"M172.58,45.3618a15.0166,15.0166,0,0,0-15,14.9995V77.6387a15,15,0,0,0,30,0V60.3613A15.0166,15.0166,0,0,0,172.58,45.3618Zm7,32.2769a7,7,0,0,1-14,0V60.3613a7,7,0,0,1,14,0Z\"/>\n        <path d=\"M135.9138,53.4211a7.01,7.01,0,0,1,7.8681,6.0752.9894.9894,0,0,0,.9843.865h6.03a1.0108,1.0108,0,0,0,.9987-1.0971,15.0182,15.0182,0,0,0-15.7162-13.8837,15.2881,15.2881,0,0,0-14.2441,15.4163V77.2037A15.288,15.288,0,0,0,136.0792,92.62a15.0183,15.0183,0,0,0,15.7162-13.8842,1.0107,1.0107,0,0,0-.9987-1.0971h-6.03a.9894.9894,0,0,0-.9843.865,7.01,7.01,0,0,1-7.8679,6.0757,7.1642,7.1642,0,0,1-6.0789-7.1849V60.6057A7.1638,7.1638,0,0,1,135.9138,53.4211Z\"/>\n        <path d=\"M218.7572,72.9277a12.1585,12.1585,0,0,0,7.1843-11.0771V58.1494A12.1494,12.1494,0,0,0,213.7921,46H196.835a1,1,0,0,0-1,1V91a1,1,0,0,0,1,1h6a1,1,0,0,0,1-1V74h6.6216l7.9154,17.4138a1,1,0,0,0,.91.5862h6.5911a1,1,0,0,0,.91-1.4138Zm-.8157-11.0771A4.1538,4.1538,0,0,1,213.7926,66h-9.8511V54h9.8511a4.1538,4.1538,0,0,1,4.1489,4.1494Z\"/>\n        <path d=\"M260.835,46h-26a1,1,0,0,0-1,1V91a1,1,0,0,0,1,1h26a1,1,0,0,0,1-1V85a1,1,0,0,0-1-1h-19V72h13a1,1,0,0,0,1-1V65a1,1,0,0,0-1-1h-13V54h19a1,1,0,0,0,1-1V47A1,1,0,0,0,260.835,46Z\"/>\n        <path d=\"M298.835,46h-6a1,1,0,0,0-1,1V69.6475a7.0066,7.0066,0,1,1-14,0V47a1,1,0,0,0-1-1h-6a1,1,0,0,0-1,1V69.6475a15.0031,15.0031,0,1,0,30,0V47A1,1,0,0,0,298.835,46Z\"/>\n        <rect x=\"307.835\" y=\"46\" width=\"8\" height=\"38\" rx=\"1\"/>\n      </g>\n    </g>\n  </g>\n`]\n","export const logoNegative = ['608 134', `\n  <title>coreui react pro logo</title>\n  <g>\n    <g style=\"fill:#80d0ff;\">\n      <path d=\"M362.0177,90.1512,353.25,69.4149a.2507.2507,0,0,0-.2559-.1914H343.01a.2263.2263,0,0,0-.2559.2559V90.0233a.5657.5657,0,0,1-.64.64h-1.2163a.5652.5652,0,0,1-.64-.64V46.5028a.5655.5655,0,0,1,.64-.64H353.442a9.9792,9.9792,0,0,1,7.7437,3.2324A12.2,12.2,0,0,1,364.13,57.64a12.4389,12.4389,0,0,1-2.24,7.584,9.37,9.37,0,0,1-6.08,3.7441c-.1709.086-.2139.1915-.128.3194l8.7041,20.6084.064.2558q0,.5127-.5757.5118h-1.1523A.703.703,0,0,1,362.0177,90.1512ZM342.754,48.3593v18.496a.2259.2259,0,0,0,.2559.2559h10.3037a7.6713,7.6713,0,0,0,6.0166-2.5918,9.8807,9.8807,0,0,0,2.3037-6.8164,10.2875,10.2875,0,0,0-2.272-6.9756,7.6033,7.6033,0,0,0-6.0483-2.624H343.01A.2263.2263,0,0,0,342.754,48.3593Z\"/>\n      <path d=\"M401.3263,48.1034H381.2945a.2262.2262,0,0,0-.2558.2559v18.496a.2259.2259,0,0,0,.2558.2559h13.8238a.5664.5664,0,0,1,.6406.64v.96a.5663.5663,0,0,1-.6406.6406H381.2945a.2263.2263,0,0,0-.2558.2559v18.56a.2258.2258,0,0,0,.2558.2558h20.0318a.5671.5671,0,0,1,.6406.6407v.96a.566.566,0,0,1-.6406.64H379.1827a.5653.5653,0,0,1-.64-.64V46.5028a.5656.5656,0,0,1,.64-.64h22.1436a.5664.5664,0,0,1,.6406.64v.96A.5663.5663,0,0,1,401.3263,48.1034Z\"/>\n      <path d=\"M439.047,90.1512l-2.4317-8.832a.2971.2971,0,0,0-.32-.1924H419.5274a.2957.2957,0,0,0-.32.1924l-2.3681,8.7676a.6577.6577,0,0,1-.7036.5762H414.919a.5385.5385,0,0,1-.5756-.7041l12.0317-43.584a.6436.6436,0,0,1,.7041-.5117h1.6a.6442.6442,0,0,1,.7041.5117l12.16,43.584.0644.1923q0,.5127-.64.5118h-1.2163A.6428.6428,0,0,1,439.047,90.1512ZM419.9435,78.9188a.3031.3031,0,0,0,.2236.0967h15.4883a.3048.3048,0,0,0,.2236-.0967c.0645-.0635.0742-.1162.0322-.1592l-7.872-28.9287c-.043-.0849-.086-.1279-.128-.1279s-.0859.043-.1279.1279L419.9112,78.76C419.8683,78.8026,419.879,78.8553,419.9435,78.9188Z\"/>\n      <path d=\"M456.6017,87.911a11.6372,11.6372,0,0,1-3.3277-8.7041V57.1913a11.4158,11.4158,0,0,1,3.36-8.5762,12.0941,12.0941,0,0,1,8.8-3.2637,12.2566,12.2566,0,0,1,8.8643,3.2315,11.3927,11.3927,0,0,1,3.36,8.6084v.64a.5663.5663,0,0,1-.6406.6407l-1.28.0634q-.6408,0-.64-.5761v-.8321a9.289,9.289,0,0,0-2.6558-6.9121,10.6734,10.6734,0,0,0-14.0161,0,9.2854,9.2854,0,0,0-2.6563,6.9121V79.3993a9.2808,9.2808,0,0,0,2.6563,6.9121,10.67,10.67,0,0,0,14.0161,0,9.2843,9.2843,0,0,0,2.6558-6.9121v-.7686q0-.5757.64-.5752l1.28.0635a.5667.5667,0,0,1,.6406.6406v.5118a11.4952,11.4952,0,0,1-3.36,8.64,13.6227,13.6227,0,0,1-17.6963,0Z\"/>\n      <path d=\"M514.4376,46.5028v.96a.5658.5658,0,0,1-.64.6406H503.046a.2263.2263,0,0,0-.2559.2559v41.664a.566.566,0,0,1-.6406.64h-1.2158a.5652.5652,0,0,1-.64-.64V48.3593a.2266.2266,0,0,0-.2558-.2559H489.8619a.5656.5656,0,0,1-.64-.6406v-.96a.5656.5656,0,0,1,.64-.64H513.798A.5658.5658,0,0,1,514.4376,46.5028Z\"/>\n      <path d=\"M522.0665,89.5116a2.8385,2.8385,0,0,1-.8-2.0488,2.9194,2.9194,0,0,1,.8-2.1114,2.7544,2.7544,0,0,1,2.08-.832,2.8465,2.8465,0,0,1,2.9438,2.9434,2.7541,2.7541,0,0,1-.832,2.08,2.9221,2.9221,0,0,1-2.1118.8008A2.754,2.754,0,0,1,522.0665,89.5116Z\"/>\n      <path d=\"M542.4054,88.0077a11.3123,11.3123,0,0,1-3.2-8.416v-5.44a.5656.5656,0,0,1,.64-.64h1.2158a.5661.5661,0,0,1,.64.64v5.5039a9.1424,9.1424,0,0,0,2.5283,6.72,8.9745,8.9745,0,0,0,6.6875,2.5605,8.7908,8.7908,0,0,0,9.28-9.28V46.5028a.5655.5655,0,0,1,.64-.64h1.2163a.566.566,0,0,1,.64.64V79.5917a11.2545,11.2545,0,0,1-3.2325,8.416,13.0618,13.0618,0,0,1-17.0556,0Z\"/>\n      <path d=\"M580.35,88.1034a10.4859,10.4859,0,0,1-3.36-8.1279v-1.792a.5663.5663,0,0,1,.64-.6407h1.0884a.5668.5668,0,0,1,.64.6407v1.6a8.5459,8.5459,0,0,0,2.752,6.6562,10.5353,10.5353,0,0,0,7.36,2.4961,9.8719,9.8719,0,0,0,6.9761-2.3681,8.2161,8.2161,0,0,0,2.56-6.336,8.4,8.4,0,0,0-1.12-4.416,11.3812,11.3812,0,0,0-3.3281-3.3926,71.6714,71.6714,0,0,0-6.1763-3.7119,71.0479,71.0479,0,0,1-6.24-3.84,12.1711,12.1711,0,0,1-3.4238-3.68,10.2614,10.2614,0,0,1-1.28-5.3438,9.8579,9.8579,0,0,1,3.0718-7.7441,12.0122,12.0122,0,0,1,8.32-2.752q5.6954,0,8.96,3.1036a10.8251,10.8251,0,0,1,3.2642,8.2246v1.6a.5658.5658,0,0,1-.64.64h-1.1519a.5652.5652,0,0,1-.64-.64V56.8075a8.8647,8.8647,0,0,0-2.624-6.6885,9.9933,9.9933,0,0,0-7.232-2.5273,9.37,9.37,0,0,0-6.5278,2.1435,7.8224,7.8224,0,0,0-2.3682,6.1123,7.8006,7.8006,0,0,0,1.0244,4.16,10.387,10.387,0,0,0,3.0078,3.0391,62.8714,62.8714,0,0,0,5.9522,3.4882,71.0575,71.0575,0,0,1,6.72,4.2559,13.4674,13.4674,0,0,1,3.648,3.9365,10.049,10.049,0,0,1,1.28,5.1836,10.7177,10.7177,0,0,1-3.2637,8.1924q-3.2637,3.0717-8.832,3.0723Q583.71,91.1757,580.35,88.1034Z\"/>\n    </g>\n\n    <g style=\"fill:#fff;\">\n      <g>\n        <path d=\"M99.835,36.0577l-39-22.5167a12,12,0,0,0-12,0l-39,22.5166a12.0339,12.0339,0,0,0-6,10.3924V91.4833a12.0333,12.0333,0,0,0,6,10.3923l39,22.5167a12,12,0,0,0,12,0l39-22.5167a12.0331,12.0331,0,0,0,6-10.3923V46.45A12.0334,12.0334,0,0,0,99.835,36.0577Zm-2,55.4256a4,4,0,0,1-2,3.4641l-39,22.5167a4.0006,4.0006,0,0,1-4,0l-39-22.5167a4,4,0,0,1-2-3.4641V46.45a4,4,0,0,1,2-3.4642l39-22.5166a4,4,0,0,1,4,0l39,22.5166a4,4,0,0,1,2,3.4642Z\"/>\n        <path d=\"M77.8567,82.0046h-2.866a4,4,0,0,0-1.9247.4934L55.7852,91.9833,35.835,80.4648V57.4872l19.95-11.5185,17.2893,9.4549a3.9993,3.9993,0,0,0,1.9192.4906h2.8632a2,2,0,0,0,2-2V51.2024a2,2,0,0,0-1.04-1.7547L59.628,38.9521a8.0391,8.0391,0,0,0-7.8428.09L31.8346,50.56a8.0246,8.0246,0,0,0-4,6.9287v22.976a8,8,0,0,0,4,6.9283l19.95,11.5186a8.0429,8.0429,0,0,0,7.8433.0879l19.19-10.5312a2,2,0,0,0,1.0378-1.7533v-2.71A2,2,0,0,0,77.8567,82.0046Z\"/>\n      </g>\n      <g>\n        <path d=\"M172.58,45.3618a15.0166,15.0166,0,0,0-15,14.9995V77.6387a15,15,0,0,0,30,0V60.3613A15.0166,15.0166,0,0,0,172.58,45.3618Zm7,32.2769a7,7,0,0,1-14,0V60.3613a7,7,0,0,1,14,0Z\"/>\n        <path d=\"M135.9138,53.4211a7.01,7.01,0,0,1,7.8681,6.0752.9894.9894,0,0,0,.9843.865h6.03a1.0108,1.0108,0,0,0,.9987-1.0971,15.0182,15.0182,0,0,0-15.7162-13.8837,15.2881,15.2881,0,0,0-14.2441,15.4163V77.2037A15.288,15.288,0,0,0,136.0792,92.62a15.0183,15.0183,0,0,0,15.7162-13.8842,1.0107,1.0107,0,0,0-.9987-1.0971h-6.03a.9894.9894,0,0,0-.9843.865,7.01,7.01,0,0,1-7.8679,6.0757,7.1642,7.1642,0,0,1-6.0789-7.1849V60.6057A7.1638,7.1638,0,0,1,135.9138,53.4211Z\"/>\n        <path d=\"M218.7572,72.9277a12.1585,12.1585,0,0,0,7.1843-11.0771V58.1494A12.1494,12.1494,0,0,0,213.7921,46H196.835a1,1,0,0,0-1,1V91a1,1,0,0,0,1,1h6a1,1,0,0,0,1-1V74h6.6216l7.9154,17.4138a1,1,0,0,0,.91.5862h6.5911a1,1,0,0,0,.91-1.4138Zm-.8157-11.0771A4.1538,4.1538,0,0,1,213.7926,66h-9.8511V54h9.8511a4.1538,4.1538,0,0,1,4.1489,4.1494Z\"/>\n        <path d=\"M260.835,46h-26a1,1,0,0,0-1,1V91a1,1,0,0,0,1,1h26a1,1,0,0,0,1-1V85a1,1,0,0,0-1-1h-19V72h13a1,1,0,0,0,1-1V65a1,1,0,0,0-1-1h-13V54h19a1,1,0,0,0,1-1V47A1,1,0,0,0,260.835,46Z\"/>\n        <path d=\"M298.835,46h-6a1,1,0,0,0-1,1V69.6475a7.0066,7.0066,0,1,1-14,0V47a1,1,0,0,0-1-1h-6a1,1,0,0,0-1,1V69.6475a15.0031,15.0031,0,1,0,30,0V47A1,1,0,0,0,298.835,46Z\"/>\n        <rect x=\"307.835\" y=\"46\" width=\"8\" height=\"38\" rx=\"1\"/>\n      </g>\n    </g>\n  </g>\n`]\n","import { createStore } from 'redux'\n\nconst initialState = {\n  sidebarShow: 'responsive'\n}\n\nconst changeState = (state = initialState, { type, ...rest }) => {\n  switch (type) {\n    case 'set':\n      return {...state, ...rest }\n    default:\n      return state\n  }\n}\n\nconst store = createStore(changeState)\nexport default store","import 'react-app-polyfill/ie11'; // For IE 11 support\nimport 'react-app-polyfill/stable';\nimport 'core-js';\nimport './polyfill'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { icons } from './assets/icons'\n\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport firebase from 'firebase';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBkDQ7fU4CuXWDHkKX4GTh_bKUxF7xIhbQ\",\n  authDomain: \"cloud-service-react.firebaseapp.com\",\n  databaseURL: \"https://cloud-service-react-default-rtdb.firebaseio.com\",\n  projectId: \"cloud-service-react\",\n  storageBucket: \"cloud-service-react.appspot.com\",\n  messagingSenderId: \"729523848794\",\n  appId: \"1:729523848794:web:c77a5b352c3c75d0e43a63\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nReact.icons = icons\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}